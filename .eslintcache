[{"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\index.js":"1","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\signIn\\SignIn.jsx":"2","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\maxMin\\MaxMin.jsx":"3","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\editPetInfo\\EditPetInfo.jsx":"4","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\doctorAddPet\\DoctorAddPet.jsx":"5","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\slider\\Slider.js":"6","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\measure\\NorMalMeasurement.jsx":"7","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\measure\\Mesasure.jsx":"8","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\apiKey\\APIKey.jsx":"9","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx":"10","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\Fetch_token.js":"11","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\FetchUtil1.js":"12","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\FetchUtil2.js":"13","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx":"14","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx":"15","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\menuOptions\\help\\Help.jsx":"16","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx":"17","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\FetchUtil.js":"18","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx":"19","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\areaCode\\imgArray.js":"20","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\menuOptions\\settings\\Settings.jsx":"21","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\heard\\Heard.js":"22","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx":"23","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\temporaryStorage.js":"24","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\uploadImg\\UploadImg.js":"25","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\home\\Home.jsx":"26","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\App.js":"27","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\signIn\\forgotPassword\\ForgotPassword.jsx":"28","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx":"29","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx":"30","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js":"31","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx":"32","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\areaCode\\country.js":"33"},{"size":140,"mtime":1610507724638,"results":"34","hashOfConfig":"35"},{"size":10815,"mtime":1637282777386,"results":"36","hashOfConfig":"35"},{"size":2282,"mtime":1611394187435,"results":"37","hashOfConfig":"35"},{"size":25505,"mtime":1632984817937,"results":"38","hashOfConfig":"35"},{"size":33422,"mtime":1633672775140,"results":"39","hashOfConfig":"35"},{"size":4425,"mtime":1636704627904,"results":"40","hashOfConfig":"35"},{"size":54162,"mtime":1636715002256,"results":"41","hashOfConfig":"35"},{"size":92953,"mtime":1636944083308,"results":"42","hashOfConfig":"35"},{"size":8512,"mtime":1626846958376,"results":"43","hashOfConfig":"35"},{"size":14747,"mtime":1635313535612,"results":"44","hashOfConfig":"35"},{"size":3738,"mtime":1629287129300,"results":"45","hashOfConfig":"35"},{"size":3270,"mtime":1637232310424,"results":"46","hashOfConfig":"35"},{"size":2651,"mtime":1637283112095,"results":"47","hashOfConfig":"35"},{"size":29797,"mtime":1636595190421,"results":"48","hashOfConfig":"35"},{"size":1676,"mtime":1633669763297,"results":"49","hashOfConfig":"35"},{"size":3047,"mtime":1634718960042,"results":"50","hashOfConfig":"35"},{"size":25243,"mtime":1631872821516,"results":"51","hashOfConfig":"35"},{"size":3403,"mtime":1632650365880,"results":"52","hashOfConfig":"35"},{"size":5454,"mtime":1635157346078,"results":"53","hashOfConfig":"35"},{"size":11452,"mtime":1628148568885,"results":"54","hashOfConfig":"35"},{"size":11391,"mtime":1636708145615,"results":"55","hashOfConfig":"35"},{"size":5515,"mtime":1634718971117,"results":"56","hashOfConfig":"35"},{"size":14495,"mtime":1635333648027,"results":"57","hashOfConfig":"35"},{"size":1300,"mtime":1637227014331,"results":"58","hashOfConfig":"35"},{"size":3044,"mtime":1631866728383,"results":"59","hashOfConfig":"35"},{"size":2609,"mtime":1637232390281,"results":"60","hashOfConfig":"35"},{"size":5196,"mtime":1637225136464,"results":"61","hashOfConfig":"35"},{"size":3811,"mtime":1637213306527,"results":"62","hashOfConfig":"35"},{"size":3274,"mtime":1637213207418,"results":"63","hashOfConfig":"35"},{"size":3621,"mtime":1637283697645,"results":"64","hashOfConfig":"35"},{"size":50002,"mtime":1631255072176,"results":"65","hashOfConfig":"35"},{"size":13021,"mtime":1635156633995,"results":"66","hashOfConfig":"35"},{"size":18925,"mtime":1628152639525,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"evbq0d",{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\index.js",[],["144","145"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\signIn\\SignIn.jsx",["146","147","148","149"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\maxMin\\MaxMin.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\editPetInfo\\EditPetInfo.jsx",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React, { Component } from 'react'\r\nimport { Input, Button, Menu, message, Select, Calendar, Col, Row, } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\nimport 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, SyncOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport dog from './../../assets/images/dog.png'\r\nimport cat from './../../assets/images/cat.png'\r\nimport horse from './../../assets/images/horse.png'\r\nimport rabbit from './../../assets/images/rabbit.png'\r\nimport selectphoto from './../../assets/images/sel.png'\r\nimport dui from './../../assets/images/dui.png'\r\nimport female from './../../assets/images/female.png'\r\nimport male from './../../assets/images/male.png'\r\nimport './editPetInfo.less'\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class EditPetInfo extends Component {\r\n  state = {\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    api: '',\r\n    id: '',\r\n    seleceID: '',//医生id\r\n    petSpecies: 0,\r\n    unit: 1,\r\n    gender: 0,\r\n    isMix: false,\r\n    imageId: -1,\r\n    imgurl: '',\r\n    breedArr: [],\r\n    petSpeciesBreedId: '',\r\n    dogData: [],\r\n    birthday: moment(new Date()).format('MMMM D, YYYY'),\r\n    patientId: '',\r\n    petName: '',\r\n\r\n    petId: '',\r\n    lastName: '',\r\n    firstName: '',\r\n    breedName: '',\r\n\r\n    initpetName: '',\r\n    initpetId: '',\r\n    initlastName: '',\r\n    initfirstName: '',\r\n    initbreedName: '',\r\n\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    if (this.props.location.participate) {\r\n      let props = this.props.location.participate\r\n      console.log(props);\r\n      this.setState({\r\n        patientId: props.patientId,\r\n        petId: props.petId\r\n      }, () => {\r\n        this._getPetInfo()\r\n      })\r\n      console.log(props);\r\n\r\n\r\n      this._getData()\r\n    }\r\n  }\r\n  componentWillUnmount () {\r\n\r\n  }\r\n  _getData = (val, clearBreed = true) => {\r\n    this.setState({\r\n      petSpecies: val,\r\n\r\n    })\r\n    if (clearBreed) {\r\n      this.setState({\r\n        breedName: ''\r\n      })\r\n    }\r\n    let data = {\r\n      speciesId: val\r\n    }\r\n    fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n      .then(res => {\r\n        console.log('---', res);\r\n        if (res.code === 0) {\r\n          let arr = []\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName\r\n            }\r\n            arr.push(data)\r\n          })\r\n          this.setState({\r\n            breedArr: arr\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n  _getPetInfo = () => {\r\n    let datas = {\r\n      patientId: this.state.patientId,\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n\r\n\r\n\r\n    console.log('入参：', datas);\r\n    fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n      .then(res => {\r\n        console.log('>>>>>>>>>>>>>>', res);\r\n        if (res.flag === true) {\r\n          //有宠物，进入1\r\n          let datas = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            if (res.data[i].petId === this.state.petId) {\r\n              datas = res.data[i]\r\n              break\r\n            }\r\n\r\n          }\r\n          console.log('datas', datas);\r\n          let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url, gender, speciesId } = datas\r\n\r\n          if (isMix !== true) {\r\n            isMix = false\r\n          }\r\n          petName = isNull(petName)\r\n          lastName = isNull(lastName)\r\n          firstName = isNull(firstName)\r\n          breedName = isNull(breedName)\r\n          url = isNull(url)\r\n          if (birthday != null) {\r\n            birthday = moment(birthday).format('MMMM D, YYYY')\r\n          }\r\n          else {\r\n            birthday = ''\r\n          }\r\n          if (gender === null || gender === NaN || `${gender}` === 'null' || `${gender}` === 'NaN') {\r\n            gender = 0\r\n          }\r\n          if (weight) {\r\n            weight = (weight * 2.2046).toFixed(1)\r\n          } else {\r\n            weight = ''\r\n          }\r\n\r\n          this.setState({\r\n            petId,\r\n            petName,\r\n            lastName,\r\n            firstName,\r\n            breedName,\r\n            isMix,\r\n            birthday,\r\n            weight,\r\n            imgurl: url,\r\n            gender,\r\n            petSpecies: speciesId,\r\n\r\n\r\n            initpetName: petName,\r\n            initlastName: lastName,\r\n            initfirstName: firstName,\r\n          }, () => {\r\n            this._getData(speciesId, false)\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n\r\n        console.log(err);\r\n      })\r\n    const isNull = (value) => {\r\n      if (value === null || value === NaN || `${value}` === 'null' || `${value}` === 'NaN') {\r\n        return ''\r\n      } else {\r\n        return value\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    const { api, id, seleceID } = this.state\r\n    if (e.key === '1') {\r\n      // this.props.history.push({ pathname: '/page6', query: { api, id, seleceID } })\r\n      this.props.history.goBack()\r\n    }\r\n    if (e.key === '2') {\r\n      this.props.history.push('/')\r\n    }\r\n\r\n  };\r\n  /**------------------顶部end------------------------ */\r\n  _petSpecies = () => {\r\n    let { petSpecies } = this.state\r\n    let dogbgc = '', catbgc = '', hoursebgc = '', rabbitbgc = '';\r\n    switch (petSpecies) {\r\n      case 2: dogbgc = '#E1206D'; catbgc = '#F08FB6'; hoursebgc = '#F08FB6'; rabbitbgc = '#F08FB6'; break;\r\n      case 1: dogbgc = '#F08FB6'; catbgc = '#E1206D'; hoursebgc = '#F08FB6'; rabbitbgc = '#F08FB6'; break;\r\n      case 3: dogbgc = '#F08FB6'; catbgc = '#F08FB6'; hoursebgc = '#E1206D'; rabbitbgc = '#F08FB6'; break;\r\n      case 4: dogbgc = '#F08FB6'; catbgc = '#F08FB6'; hoursebgc = '#F08FB6'; rabbitbgc = '#E1206D'; break;\r\n      default: dogbgc = '#F08FB6'; catbgc = '#F08FB6'; hoursebgc = '#F08FB6'; rabbitbgc = '#F08FB6'; break;\r\n    }\r\n    this.avatar = selectphoto\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\r\n          <div className=\"selectSpecies\">\r\n            <ul>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this._getData(2) }} style={{ backgroundColor: dogbgc }}>\r\n                    <img src={dog} alt=\"\" style={{ width: '25px' }} />\r\n                  </div>\r\n                  Dog\r\n                </div>\r\n              </li>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this._getData(1) }} style={{ backgroundColor: catbgc }} >\r\n                    <img src={cat} alt=\"\" style={{ width: '29px' }} />\r\n                  </div>\r\n                  Cat\r\n                </div>\r\n              </li>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this._getData(3) }} style={{ backgroundColor: hoursebgc }}>\r\n                    <img src={horse} alt=\"\" style={{ height: '30px', color: '#FFF' }} />\r\n                  </div>\r\n                  Horse\r\n                </div>\r\n              </li>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this._getData(4) }} style={{ backgroundColor: rabbitbgc }}>\r\n                    <img src={rabbit} alt=\"\" style={{ height: '28px', color: '#FFF', }} />\r\n                  </div>\r\n                  Rabbit\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n          <div className=\"img\">\r\n            <div className=\"ciral\" onClick={() => {\r\n              let file = document.getElementById('f')\r\n              file.click();\r\n            }}>\r\n              {(this.state.imgurl) ? (<img src={this.state.imgurl} alt=\"\" id=\"touxiang\" height=\"280px\" />) : (\r\n                <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n              )}\r\n\r\n              <input type=\"file\"\r\n                accept=\"image/gif,image/jpeg,image/jpg,image/png,image/svg\"\r\n                className=\"uploadImg\"\r\n                id=\"f\"\r\n                onChange={(e) => {\r\n                  console.log(e);\r\n                  let $target = e.target || e.srcElement\r\n                  if ($target.files.length === 0) {\r\n                    return;\r\n                  }\r\n                  let file = $target.files[0]\r\n                  var reader = new FileReader()                   //创建文件阅读器实例\r\n                  reader.readAsDataURL(file)\r\n                  reader.onload = (data) => {\r\n                    let res = data.target || data.srcElement\r\n                    console.dir(document.getElementById('touxiang'));\r\n                    document.getElementById('touxiang').src = res.result\r\n\r\n\r\n                    const formData = new FormData();\r\n                    formData.append('img', file);\r\n                    fetch(`${url}/image/uploadImage`, {\r\n                      method: 'POST',\r\n                      headers: {\r\n                      },\r\n                      body: formData\r\n                    })\r\n                      .then((response) => response.json())\r\n                      .then((res) => {\r\n                        console.log(res);\r\n                        if (res.flag === true) {\r\n                          this.setState({\r\n                            imageId: res.data.imageId,\r\n                            imgurl: res.data.url\r\n                          })\r\n                        }\r\n                      })\r\n                      .catch((err) => {\r\n                        console.log(err);\r\n                      });\r\n                  }\r\n\r\n                }} />\r\n              <p>Upload Photo</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n\r\n    const onPanelChange = (value, mode) => {\r\n      console.log('-----', value, mode);\r\n    }\r\n    let birthday = this.state.birthday\r\n    return (\r\n      <div className=\"petName\">\r\n        <div className=\"l\">\r\n          <p >Pet Name</p>\r\n          <div className=\"infoInput\">\r\n            <Input\r\n              bordered={false}\r\n              value={this.state.initpetName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  petName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n                  initpetName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p >Pet Birthday</p>\r\n          <div className=\"infoInput\" >\r\n            <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\r\n              document.getElementById('calendar').style.display = 'block'\r\n            }}>{this.state.birthday}</p>\r\n            <div className=\"calendar\" id=\"calendar\">\r\n              <Calendar\r\n                fullscreen={false}\r\n                headerRender={({ value, type, onChange, onTypeChange }) => {\r\n                  const start = 0;\r\n                  const end = 12;\r\n                  const monthOptions = [];\r\n\r\n                  const current = value.clone();\r\n                  const localeData = value.localeData();\r\n                  const months = [];\r\n                  for (let i = 0; i < 12; i++) {\r\n                    current.month(i);\r\n                    months.push(localeData.monthsShort(current));\r\n                  }\r\n\r\n                  for (let index = start; index < end; index++) {\r\n                    monthOptions.push(\r\n                      <Select.Option className=\"month-item\" key={`${index}`}>\r\n                        {months[index]}\r\n                      </Select.Option>\r\n                    );\r\n                  }\r\n                  const month = value.month();\r\n\r\n                  const year = value.year();\r\n                  const options = [];\r\n                  for (let i = year - 10; i < year + 10; i += 1) {\r\n                    options.push(\r\n                      <Select.Option key={i} value={i} className=\"year-item\">\r\n                        {i}\r\n                      </Select.Option>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <div style={{ padding: 8 }}>\r\n                      <Row gutter={8}>\r\n                        <Col>\r\n                          <Select\r\n                            size=\"small\"\r\n                            dropdownMatchSelectWidth={false}\r\n                            className=\"my-year-select\"\r\n                            onChange={(newYear) => {\r\n                              const now = value.clone().year(newYear);\r\n                              onChange(now);\r\n                            }}\r\n                            value={String(year)}\r\n                          >\r\n                            {options}\r\n                          </Select>\r\n                        </Col>\r\n                        <Col>\r\n                          <Select\r\n                            size=\"small\"\r\n                            dropdownMatchSelectWidth={false}\r\n                            value={String(month)}\r\n                            onChange={(selectedMonth) => {\r\n                              const newValue = value.clone();\r\n                              newValue.month(parseInt(selectedMonth, 10));\r\n                              onChange(newValue);\r\n                            }}\r\n                          >\r\n                            {monthOptions}\r\n                          </Select>\r\n                        </Col>\r\n                        <Col>\r\n                          <div className=\"btn\" onClick={() => {\r\n                            document.getElementById('calendar').style.display = 'none'\r\n                          }}>\r\n                            Choose this date\r\n                          </div>\r\n\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  );\r\n                }}\r\n                onSelect={(value) => {\r\n                  console.log(value);\r\n                  this.setState({\r\n                    birthday: moment(value).format('MMMM D, YYYY')\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _ownName = () => {\r\n\r\n    return (\r\n      <div className=\"petName\">\r\n        <div className=\"l\">\r\n          <p >Owner First Name</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.initfirstName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  firstName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n                  initfirstName: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p >Owner Last Name</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.initlastName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  lastName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n                  initlastName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _select = (value, data) => {\r\n    console.log(value, data);  //value的值为id\r\n    this.setState({\r\n      petSpeciesBreedId: value,\r\n      breedName: data.children\r\n    })\r\n  }\r\n  _primaryBreed = () => {\r\n    let options = null\r\n    options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\r\n    let { breedName } = this.state\r\n    // console.log('-----breedName:', breedName);\r\n\r\n    return (\r\n      <div className=\"petName\">\r\n        <div className=\"l\">\r\n          <p >Primary Breed</p>\r\n          <div className=\"infoInput\">\r\n            {/* <Input bordered={false} /> */}\r\n            <Select\r\n              showSearch\r\n              style={{ width: '100%' }}\r\n              bordered={false}\r\n              value={breedName}\r\n              // size = {'small'}        \r\n              placeholder=\"Search to Select\"\r\n              optionFilterProp=\"children\"\r\n              listHeight={256}\r\n              onSelect={(value, data) => this._select(value, data)}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n            >\r\n              {options}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"r\" style={{ paddingTop: '80px' }}>\r\n          <div className=\"max\">\r\n            Mix?\r\n            <div className=\"selected\"\r\n              onClick={() => this.setState({\r\n                isMix: !this.state.isMix\r\n              })}\r\n            >\r\n              {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _weight = () => {\r\n    let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\r\n    switch (this.state.unit) {\r\n      case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\r\n      case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\r\n    }\r\n\r\n    switch (this.state.gender) {\r\n      case 0: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\r\n      case 1: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"petName\">\r\n        <div className=\"l\">\r\n          <p >Pet Weight</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.weight}\r\n              onChange={(item) => {\r\n\r\n                item = item.target.value.replace(/[^\\d.]/g, \"\");  //清除“数字”和“.”以外的字符  \r\n                item = item.replace(/\\.{2,}/g, \".\"); //只保留第一个. 清除多余的  \r\n                item = item.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\");\r\n                item = item.replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3');//只能输入两个小数  \r\n                if (item.indexOf(\".\") < 0 && item != \"\") {//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额 \r\n                  item = parseFloat(item);\r\n                }\r\n\r\n                this.setState({\r\n                  weight: item\r\n                })\r\n              }}\r\n\r\n            />\r\n            <div className=\"ibKg\">\r\n              <div className=\"ibs\"\r\n                style={{ backgroundColor: ibBgcColor, color: ibCor }}\r\n                onClick={() => {\r\n                  console.log(this.state.unit);\r\n                  if (this.state.unit === 2) {\r\n\r\n                    this.setState({\r\n                      unit: 1,\r\n                    })\r\n                  }\r\n                }}\r\n              >Ibs</div>\r\n              <div className=\"kgs\"\r\n                style={{ backgroundColor: kgBgcColor, color: kgCor }}\r\n                onClick={() => {\r\n                  console.log(this.state.unit);\r\n                  if (this.state.unit === 1) {\r\n                    this.setState({\r\n                      unit: 2,\r\n                    })\r\n                  }\r\n                }}\r\n              >kgs</div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\r\n          <div className=\"gender\">\r\n            <div className=\"selectGender\">\r\n              <div className=\"female\">\r\n                <div className=\"femaleCiral\"\r\n                  style={{ backgroundColor: femaleBgc }}\r\n                  onClick={() => this.setState({ gender: 0 })}\r\n                >\r\n                  <img src={female} alt=\"\" />\r\n                </div>\r\n                Female\r\n              </div>\r\n              <div className=\"male\">\r\n                <div className=\"maleCiral\"\r\n                  style={{ backgroundColor: maleBgc }}\r\n                  onClick={() => this.setState({ gender: 1 })}\r\n                >\r\n                  <img src={male} alt=\"\" />\r\n                </div>\r\n                Male\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  render () {\r\n    const { closeColor, closebgc, minbgc } = this.state\r\n\r\n    return (\r\n      <div id=\"editPetInfo\">\r\n        {/* 头部 */}\r\n        <div className=\"close1\">\r\n          {/* 菜单 */}\r\n          <div className=\"menu\">\r\n\r\n            <MyIcon type='icon-fanhui4' className=\"icon\" onClick={() => {\r\n              // this.props.history.push({ pathname: '/page8', participate: { patientId: this.state.patientId } })\r\n              this.props.history.goBack()\r\n            }} />\r\n          </div>\r\n          <div className=\"text\">mella</div>\r\n          <div className='maxmin'>\r\n            <div\r\n              className=\"min iconfont icon-64\"\r\n              onClick={this._min}\r\n              onMouseEnter={this._minMove}\r\n              onMouseLeave={this._minLeave}\r\n              style={{ backgroundColor: minbgc }}\r\n            ></div>\r\n\r\n            <div\r\n              className=\"max iconfont icon-guanbi2\"\r\n              onClick={this._close}\r\n              onMouseEnter={this._closeMove}\r\n              onMouseLeave={this._closeLeave}\r\n              style={{ backgroundColor: closebgc, color: closeColor }}\r\n            ></div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"editPetInfo_top\">\r\n          <div className=\"title\">{`${this.state.patientId}, ${this.state.petName}`}</div>\r\n          {this._petSpecies()}\r\n          {this._petName()}\r\n          {this._ownName()}\r\n          {this._primaryBreed()}\r\n          {this._weight()}\r\n        </div>\r\n        <div className=\"editPetInfo_foot\">\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              let { petName, birthday, firstName, lastName, petSpeciesBreedId, isMix, weight, gender, unit, imageId, breedName, petId } = this.state\r\n              console.log('生日：', birthday);\r\n              if (unit === 1) {\r\n                weight = (0.45359 * weight).toFixed(2)\r\n              }\r\n\r\n              console.log('petName:', petName, '------------birthday:', birthday, '--------firstName', firstName, '---------------lastName',\r\n                lastName, '-------------petSpeciesBreedId', petSpeciesBreedId, '---isMix:', isMix, '----weight:', weight, '----gender', gender);\r\n              let data = {\r\n                petName,\r\n                weight: parseFloat(weight),\r\n                gender,\r\n                firstName,\r\n                lastName\r\n              }\r\n              if (birthday) {\r\n                data.birthday = moment(birthday).format('YYYY-MM-DD')\r\n              }\r\n              if (imageId !== -1) {\r\n                data.imageId = imageId\r\n              }\r\n              if (breedName) {\r\n                data.breedName = breedName\r\n              }\r\n\r\n              console.log(data);\r\n              fetchRequest(`/pet/updatePetInfo/1/${petId}`, 'POST', data)\r\n                .then(res => {\r\n                  console.log(res);\r\n                  if (res.flag === true) {\r\n                    console.log('tiaozhhuan');\r\n                    this.props.history.push({ pathname: 'page8', participate: { patientId: this.state.patientId } })\r\n                  } else {\r\n                    message.error('Update failed')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  console.log(err);\r\n                })\r\n            }}\r\n\r\n          >Save Changes</div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}",["166","167"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\doctorAddPet\\DoctorAddPet.jsx",["168","169","170","171","172","173","174","175","176","177"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\measure\\NorMalMeasurement.jsx",["178","179","180","181","182","183","184"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\measure\\Mesasure.jsx",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\apiKey\\APIKey.jsx",["222","223","224","225"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\Fetch_token.js",["226","227","228","229"],"\r\n// let COMMON_URL = 'http://192.168.0.36:8080/melladesk';//本地\r\n// let COMMON_URL = 'http://54.85.89.201:8081/melladesk';//AWS\r\n// let COMMON_URL = 'http://8.131.66.177:8081/melladesk';//阿里云\r\nlet COMMON_URL = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/melladesk';//企业AWS\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchToken (url, method, params = '', token = '') {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let headers = null\r\n    if (token !== '') {\r\n      headers = {\r\n        'authorization': token,\r\n      };\r\n    }\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else if (method === 'POST') {\r\n    let header = {\r\n      \"Content-type\": \"application/json\"\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/merge-patch+json\",\r\n      authorization: token\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\FetchUtil1.js",["230","231","232","233"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\FetchUtil2.js",["234","235","236","237"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx",["238","239","240","241","242"],"import React, { Component, } from 'react'\r\nimport {\r\n  Button,\r\n\r\n  Modal,\r\n  message\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport { createFromIconfontCN, CaretDownFilled } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport './vetProfile.less'\r\nimport imgArray from './../../../utils/areaCode/imgArray'\r\nimport MaxMin from './../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest2 } from './../../../utils/FetchUtil2'\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport countryList from './../../../utils/areaCode/country';\r\nimport moment from 'moment';\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\n\r\nconst options = [\r\n  { label: 'Dogs', value: 'Dogs' },\r\n  { label: 'Cats', value: 'Cats' },\r\n  { label: 'Small Pets', value: 'Small Pets' },\r\n  { label: 'Nutrition', value: 'Nutrition' },\r\n  { label: 'Surgery', value: 'Surgery' },\r\n  { label: 'Zoo', value: 'Zoo' },\r\n  { label: 'Wildlife', value: 'Wildlife' },\r\n  { label: 'Cardiology', value: 'Cardiology' },\r\n  { label: 'Neurology', value: 'Neurology' },\r\n  { label: 'Anaesthesia', value: 'Anaesthesia' },\r\n  { label: 'Other', value: 'Other' },\r\n]\r\nexport default class VetPrifile extends Component {\r\n\r\n  state = {\r\n    code: 1,\r\n    imgArrayIndex: 0,\r\n    otherText: '',\r\n    name: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    birthday: moment(),\r\n    password: '',\r\n    password1: '',\r\n    checboxtValue: [],\r\n    expertise: '00000000000',       //专业领域，勾选某一项，则这一项为1，反之为0    01011111101\r\n\r\n    visible: false,       //nodel框是否显示\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('middle')\r\n    console.log(temporaryStorage.logupVetInfo);\r\n    if (temporaryStorage.logupVetInfo && temporaryStorage.logupVetInfo.email) {\r\n      console.log('进来了');\r\n      let { firstName, lastName, email, hash, domain, code, initPhone, birthday, imgArrayIndex } = temporaryStorage.logupVetInfo\r\n      this.setState({\r\n        name: `${lastName} ${firstName}`,\r\n        email,\r\n        password: hash,\r\n        password1: hash,\r\n        code,\r\n        phone: initPhone,\r\n        imgArrayIndex\r\n      })\r\n      if (birthday) {\r\n        console.log('有日期：', moment(birthday));\r\n        this.setState({\r\n          birthday: moment(birthday)\r\n        })\r\n      }\r\n      let domainArr = domain.split(',')\r\n      let checboxtValue = []\r\n      for (let i = 0; i < domainArr[0].length; i++) {\r\n        if (domainArr[0][i] === '1') {\r\n          checboxtValue.push(options[i].label)\r\n        }\r\n      }\r\n      if (domainArr.length > 1) {\r\n        this.setState({\r\n          checboxtValue,\r\n          otherText: domainArr[1]\r\n        })\r\n      } else {\r\n        this.setState({\r\n          checboxtValue\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  _next = () => {\r\n    let { name, lastName, email, code, phone, password1, password, } = this.state\r\n\r\n    console.log({ name, email, code, phone, password1, password, });\r\n    email = email.toLocaleLowerCase()\r\n    if (name.length <= 0) {\r\n      message.error('Please enter your first name', 3)\r\n      return\r\n    }\r\n    if (lastName.length <= 0) {\r\n      message.error('Please enter your last name', 3)\r\n      return\r\n    }\r\n    if (!email) {\r\n      message.error('Please enter the mailbox number', 3)\r\n      return\r\n    } else {\r\n      if (email.indexOf('@') === -1 || email.indexOf('@') === 0 || email.indexOf('@') === email.length - 1) {\r\n        message.error('E-mail format is incorrect', 3)\r\n        return\r\n      }\r\n    }\r\n    if (!phone) {\r\n      message.error('Please enter the phone number', 3)\r\n      return\r\n    }\r\n    if (password.length <= 0 || password1.length <= 0) {\r\n      message.error('Please enter the password', 3)\r\n      return\r\n    }\r\n\r\n    if (password !== password1) {\r\n      message.error('The password entered twice is incorrect, please re-enter', 3)\r\n      return\r\n    }\r\n\r\n\r\n\r\n\r\n    fetchRequest(`/user/checkUser/${email}`, 'GET', '')\r\n      .then(res => {\r\n        console.log(res);\r\n        if (!res.flag) {\r\n          console.log('邮箱号以被注册，是否忘记密码');\r\n          this.setState({\r\n            visible: true\r\n          })\r\n        }\r\n        else {\r\n          console.log('邮箱号可以使用');\r\n\r\n          let params = {\r\n            firstName: name,\r\n            lastName,\r\n            email,\r\n            phone: `+${code}${phone}`,\r\n            hash: password,\r\n\r\n          }\r\n          console.log('注册接口的入参：', params);\r\n          fetchRequest2('/user/deskRegistAWSSNS', \"POST\", params)\r\n            .then(res => {\r\n              console.log('注册接口返回数据：', res);\r\n              if (res.flag) {\r\n                console.log('注册成功了，去验证验证码');\r\n                temporaryStorage.logupEmailCode = res.data\r\n                params.code = code\r\n                params.initPhone = phone\r\n                params.imgArrayIndex = this.state.imgArrayIndex\r\n                temporaryStorage.logupVetInfo = params\r\n                this.props.history.push('/uesr/logUp/VerifyEmail')\r\n              } else {\r\n                message.error('registration failed', 3)\r\n              }\r\n            })\r\n            .catch(err => {\r\n              message.error(`Error:${err.message}`)\r\n              console.log('注册接口抛出错误：', err);\r\n            })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        message.error(`Error:${err.message}`)\r\n        console.log('检测邮箱号的接口出错了', err);\r\n      })\r\n  }\r\n  _signIn = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push('/page11')\r\n  }\r\n\r\n\r\n\r\n  render () {\r\n\r\n    let { lastName, disabled, bounds, name, email, phone, password, password1, visible } = this.state\r\n    return (\r\n      <div id=\"vetPrifile\" >\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/')}\r\n        />\r\n        <div className=\"text\">\r\n          Let’s start by creating your account\r\n        </div>\r\n        <div className=\"form\">\r\n          <div className=\"item\">\r\n            <div className=\"l\">\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                placeholder=\"First Name\"\r\n                onChange={(value) => {\r\n                  let data = value.target.value\r\n\r\n                  this.setState({\r\n                    name: data\r\n                  })\r\n                }}\r\n              />\r\n\r\n            </div>\r\n            <div className=\"l\">\r\n              <input\r\n                type=\"text\"\r\n                value={lastName}\r\n                placeholder=\"Last Name\"\r\n                onChange={(value) => {\r\n                  let data = value.target.value\r\n\r\n                  this.setState({\r\n                    lastName: data\r\n                  })\r\n                }}\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"l\">\r\n              <input\r\n                type=\"Email\"\r\n                value={email}\r\n                placeholder=\"Email Address*\"\r\n                onChange={(value) => {\r\n                  let data = value.target.value\r\n                  this.setState({\r\n                    email: data\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"l\">\r\n              <ul id=\"list\">\r\n                {countryList.map((item, index) => {\r\n                  let url = imgArray[item.locale.toLowerCase()] ? imgArray[item.locale.toLowerCase()].default : ''\r\n                  return (\r\n                    <li key={index}>\r\n                      <div key={index}\r\n                        style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n                        onClick={() => {\r\n                          console.log(item, index);\r\n                          this.setState({\r\n                            code: item.code,\r\n                            imgArrayIndex: index\r\n                          })\r\n                          document.getElementById('list').style.display = \"none\"\r\n                        }}\r\n                      >\r\n                        <img src={url} alt=\"\" />\r\n                        <p >{`${item.en}   +${item.code}`}</p>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n                })}\r\n              </ul>\r\n\r\n\r\n              <div className='phone'>\r\n                <div\r\n                  style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'absolute', left: '10px' }}\r\n                  onClick={() => {\r\n                    document.getElementById('list').style.display = \"block\"\r\n                  }}\r\n                >\r\n                  <img style={{ zIndex: '888' }}\r\n                    src={imgArray[countryList[this.state.imgArrayIndex].locale.toLowerCase()].default} alt=\"\"\r\n                  />\r\n                  <CaretDownFilled style={{ marginRight: '10px' }} />\r\n                </div>\r\n\r\n\r\n                <input\r\n                  type=\"Phone\"\r\n                  value={phone}\r\n                  placeholder=\"Phone Number\"\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      phone: data.replace(/[^\\-?\\d]/g, '')\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"item\">\r\n            <div className=\"l\">\r\n              <input\r\n                type=\"Password\"\r\n                value={password}\r\n                placeholder=\"Create Password\"\r\n                onChange={(value) => {\r\n                  let data = value.target.value\r\n                  this.setState({\r\n                    password: data\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"l\">\r\n              <input\r\n                type=\"Password\"\r\n                value={password1}\r\n                placeholder=\"Confirm  Password\"\r\n                onChange={(value) => {\r\n                  let data = value.target.value\r\n                  this.setState({\r\n                    password1: data\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"footText\">Already have an accoun? <a href=\"#\" onClick={this._signIn}> Sign In</a></div>\r\n\r\n          {/* 按钮 */}\r\n          <div className=\"btn\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size='large'\r\n              htmlType=\"submit\"\r\n              onClick={this._next}\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <Modal\r\n\r\n          visible={visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          closable={false}\r\n          footer={[\r\n\r\n          ]}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"vetPrifileModal\"\r\n        >\r\n          <div id='vetPrifileModal'>\r\n            <div className=\"title\">Email Already Exists</div>\r\n\r\n            <div className='text'>Please sign up with your Mella<br />account and create a new<br />workspace from the<br />Settings menu.</div>\r\n\r\n            <div className=\"btn\">\r\n\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    visible: false,\r\n                    email: ''\r\n                  })\r\n                }}\r\n              >Try Again</button>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    visible: false\r\n                  })\r\n                  this.props.history.replace('/page11')\r\n                }}\r\n              >Sign Up</button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// import React, { Component, } from 'react'\r\n// import {\r\n//   Button,\r\n//   Input,\r\n//   Form,\r\n//   Select,\r\n//   DatePicker,\r\n//   Space,\r\n//   Modal,\r\n//   Checkbox,\r\n//   Row,\r\n//   Col,\r\n//   message\r\n// } from 'antd';\r\n// import Draggable from \"react-draggable\";\r\n// import { createFromIconfontCN, CaretDownFilled } from '@ant-design/icons';\r\n// import 'antd/dist/antd.css';\r\n\r\n// import './vetProfile.less'\r\n// import imgArray from './../../../utils/areaCode/imgArray'\r\n// import MaxMin from './../../../utils/maxminreturn/MaxMinReturn'\r\n// import { fetchRequest2 } from './../../../utils/FetchUtil2'\r\n// import { fetchRequest } from './../../../utils/FetchUtil1'\r\n// import countryList from './../../../utils/areaCode/country';\r\n// import moment from 'moment';\r\n// import temporaryStorage from '../../../utils/temporaryStorage'\r\n\r\n// const options = [\r\n//   { label: 'Dogs', value: 'Dogs' },\r\n//   { label: 'Cats', value: 'Cats' },\r\n//   { label: 'Small Pets', value: 'Small Pets' },\r\n//   { label: 'Nutrition', value: 'Nutrition' },\r\n//   { label: 'Surgery', value: 'Surgery' },\r\n//   { label: 'Zoo', value: 'Zoo' },\r\n//   { label: 'Wildlife', value: 'Wildlife' },\r\n//   { label: 'Cardiology', value: 'Cardiology' },\r\n//   { label: 'Neurology', value: 'Neurology' },\r\n//   { label: 'Anaesthesia', value: 'Anaesthesia' },\r\n//   { label: 'Other', value: 'Other' },\r\n// ]\r\n// export default class VetPrifile extends Component {\r\n\r\n//   state = {\r\n//     code: 1,\r\n//     imgArrayIndex: 0,\r\n//     otherText: '',\r\n//     name: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     birthday: moment(),\r\n//     password: '',\r\n//     password1: '',\r\n//     checboxtValue: [],\r\n//     expertise: '00000000000',       //专业领域，勾选某一项，则这一项为1，反之为0    01011111101\r\n\r\n//     visible: false,       //nodel框是否显示\r\n//     disabled: true,       //model是否可拖拽\r\n//     bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n//   }\r\n\r\n//   componentDidMount () {\r\n//     let ipcRenderer = window.electron.ipcRenderer\r\n//     ipcRenderer.send('middle')\r\n//     console.log(temporaryStorage.logupVetInfo);\r\n//     if (temporaryStorage.logupVetInfo && temporaryStorage.logupVetInfo.email) {\r\n//       console.log('进来了');\r\n//       let { firstName, lastName, email, hash, domain, code, initPhone, birthday, imgArrayIndex } = temporaryStorage.logupVetInfo\r\n//       this.setState({\r\n//         name: `${lastName} ${firstName}`,\r\n//         email,\r\n//         password: hash,\r\n//         password1: hash,\r\n//         code,\r\n//         phone: initPhone,\r\n//         imgArrayIndex\r\n//       })\r\n//       if (birthday) {\r\n//         console.log('有日期：', moment(birthday));\r\n//         this.setState({\r\n//           birthday: moment(birthday)\r\n//         })\r\n//       }\r\n//       let domainArr = domain.split(',')\r\n//       let checboxtValue = []\r\n//       for (let i = 0; i < domainArr[0].length; i++) {\r\n//         if (domainArr[0][i] === '1') {\r\n//           checboxtValue.push(options[i].label)\r\n//         }\r\n//       }\r\n//       if (domainArr.length > 1) {\r\n//         this.setState({\r\n//           checboxtValue,\r\n//           otherText: domainArr[1]\r\n//         })\r\n//       } else {\r\n//         this.setState({\r\n//           checboxtValue\r\n//         })\r\n//       }\r\n\r\n//     }\r\n\r\n//   }\r\n//   componentWillMount () {\r\n\r\n//   }\r\n//   _dateOnChange = (date, dateString) => {\r\n//     console.log(date, dateString);\r\n//     this.setState({\r\n//       birthday: date,\r\n//       birthdayStr: dateString\r\n//     })\r\n//   }\r\n//   onChange = (val) => {\r\n//     console.log('选中的;', val);\r\n//     if (val.indexOf('Other') === -1) {\r\n//       this.setState({\r\n//         disabled: true,\r\n//         otherText: ''\r\n//       })\r\n//     } else {\r\n//       this.setState({\r\n//         disabled: false\r\n//       })\r\n//     }\r\n//     let str = ''\r\n//     for (let i = 0; i < options.length; i++) {\r\n//       if (val.indexOf(options[i].label) === -1) {\r\n//         str += '0'\r\n//       } else {\r\n//         str += '1'\r\n//       }\r\n\r\n//     }\r\n//     console.log(str);\r\n//     this.setState({\r\n//       expertise: str,\r\n//       checboxtValue: val\r\n//     })\r\n//   }\r\n\r\n//   onStart = (event, uiData) => {\r\n//     const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n//     const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n//     this.setState({\r\n//       bounds: {\r\n//         left: -targetRect?.left + uiData?.x,\r\n//         right: clientWidth - (targetRect?.right - uiData?.x),\r\n//         top: -targetRect?.top + uiData?.y,\r\n//         bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   _next = () => {\r\n//     let { name, email, code, phone, birthday, password1, password, expertise, otherText, birthdayStr } = this.state\r\n\r\n//     console.log({ name, email, code, phone, birthday, password1, password, expertise });\r\n//     email = email.toLocaleLowerCase()\r\n//     if (name.length <= 0) {\r\n//       message.error('Please enter the name of the vet', 3)\r\n//       return\r\n//     }\r\n//     if (!email) {\r\n//       message.error('Please enter the mailbox number', 3)\r\n//       return\r\n//     } else {\r\n//       if (email.indexOf('@') === -1 || email.indexOf('@') === 0 || email.indexOf('@') === email.length - 1) {\r\n//         message.error('E-mail format is incorrect', 3)\r\n//         return\r\n//       }\r\n//     }\r\n//     if (!phone) {\r\n//       message.error('Please enter the phone number', 3)\r\n//       return\r\n//     }\r\n//     if (password.length <= 0 || password1.length <= 0) {\r\n//       message.error('Please enter the password', 3)\r\n//       return\r\n//     }\r\n\r\n//     if (password !== password1) {\r\n//       message.error('The password entered twice is incorrect, please re-enter', 3)\r\n//       return\r\n//     }\r\n\r\n\r\n//     let nameArr = name.split(' ')\r\n//     let firstName = nameArr[0]\r\n//     let lastName = ''\r\n//     if (nameArr.length > 1) {\r\n//       for (let i = 1; i < nameArr.length; i++) {\r\n//         lastName += nameArr[i]\r\n//       }\r\n//     }\r\n//     console.log(nameArr, firstName, lastName);\r\n\r\n//     fetchRequest(`/user/checkUser/${email}`, 'GET', '')\r\n//       .then(res => {\r\n//         console.log(res);\r\n//         if (!res.flag) {\r\n//           console.log('邮箱号以被注册，是否忘记密码');\r\n//           this.setState({\r\n//             visible: true\r\n//           })\r\n//         }\r\n//         else {\r\n//           console.log('邮箱号可以使用');\r\n//           let domain = expertise\r\n//           if (expertise[expertise.length - 1] === '1' && otherText) {\r\n//             domain += `,${otherText}`\r\n//           }\r\n//           let params = {\r\n//             firstName,\r\n//             lastName,\r\n//             email,\r\n//             phone: `+${code}${phone}`,\r\n//             hash: password,\r\n//             domain\r\n//           }\r\n//           if (birthdayStr) {\r\n//             params.birthday = birthdayStr\r\n//           }\r\n//           console.log('注册接口的入参：', params);\r\n//           fetchRequest2('/user/deskRegistAWSSNS', \"POST\", params)\r\n//             .then(res => {\r\n//               console.log('注册接口返回数据：', res);\r\n//               if (res.flag) {\r\n//                 console.log('注册成功了，去验证验证码');\r\n//                 temporaryStorage.logupEmailCode = res.data\r\n//                 params.code = code\r\n//                 params.initPhone = phone\r\n//                 params.imgArrayIndex = this.state.imgArrayIndex\r\n//                 temporaryStorage.logupVetInfo = params\r\n//                 this.props.history.push('/uesr/logUp/VerifyEmail')\r\n//               } else {\r\n//                 message.error('registration failed', 3)\r\n//               }\r\n//             })\r\n//             .catch(err => {\r\n//               message.error(`Error:${err.message}`)\r\n//               console.log('注册接口抛出错误：', err);\r\n//             })\r\n//         }\r\n//       })\r\n//       .catch(err => {\r\n//         message.error(`Error:${err.message}`)\r\n//         console.log('检测邮箱号的接口出错了', err);\r\n//       })\r\n//   }\r\n\r\n\r\n\r\n//   render () {\r\n\r\n//     let { disabled, bounds, name, email, phone, password, password1, visible } = this.state\r\n//     return (\r\n//       <div id=\"vetPrifile\" >\r\n//         {/* 关闭缩小 */}\r\n//         <MaxMin\r\n//           onClick={() => { this.props.history.push('/') }}\r\n//           onClick1={() => this.props.history.push('/')}\r\n//         />\r\n//         <div className=\"text\">\r\n//           Create Vet Profile\r\n//         </div>\r\n//         <div className=\"form\">\r\n//           <div className=\"item\">\r\n//             <div className=\"l\">\r\n//               <p>Vet Name*</p>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={name}\r\n//                 onChange={(value) => {\r\n//                   let data = value.target.value\r\n\r\n//                   this.setState({\r\n//                     name: data\r\n//                   })\r\n//                 }}\r\n//               />\r\n\r\n//             </div>\r\n//             <div className=\"l\">\r\n//               <p>Vet Email*</p>\r\n//               <input\r\n//                 type=\"Email\"\r\n//                 value={email}\r\n//                 onChange={(value) => {\r\n//                   let data = value.target.value\r\n//                   this.setState({\r\n//                     email: data\r\n//                   })\r\n//                 }}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"item\">\r\n//             <div className=\"l\">\r\n//               <ul id=\"list\">\r\n//                 {countryList.map((item, index) => {\r\n//                   let url = imgArray[item.locale.toLowerCase()] ? imgArray[item.locale.toLowerCase()].default : ''\r\n//                   return (\r\n//                     <li key={index}>\r\n//                       <div key={index}\r\n//                         style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n//                         onClick={() => {\r\n//                           console.log(item, index);\r\n//                           this.setState({\r\n//                             code: item.code,\r\n//                             imgArrayIndex: index\r\n//                           })\r\n//                           document.getElementById('list').style.display = \"none\"\r\n//                         }}\r\n//                       >\r\n//                         <img src={url} alt=\"\" />\r\n//                         <p >{`${item.en}   +${item.code}`}</p>\r\n//                       </div>\r\n//                     </li>\r\n//                   )\r\n//                 })}\r\n//               </ul>\r\n\r\n//               <p>Vet Phone Number*</p>\r\n//               <div className='phone'>\r\n//                 <div\r\n//                   style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n//                   onClick={() => {\r\n//                     document.getElementById('list').style.display = \"block\"\r\n//                   }}\r\n//                 >\r\n//                   <img style={{ zIndex: '888' }}\r\n//                     src={imgArray[countryList[this.state.imgArrayIndex].locale.toLowerCase()].default} alt=\"\"\r\n//                   />\r\n//                   <CaretDownFilled style={{ marginRight: '10px' }} />\r\n//                 </div>\r\n\r\n\r\n//                 <input\r\n//                   type=\"Phone\"\r\n//                   value={phone}\r\n//                   onChange={(value) => {\r\n//                     let data = value.target.value\r\n//                     this.setState({\r\n//                       phone: data.replace(/[^\\-?\\d]/g, '')\r\n//                     })\r\n//                   }}\r\n//                 />\r\n//               </div>\r\n\r\n//             </div>\r\n//             <div className=\"l\">\r\n//               <p>Vet Birthday</p>\r\n//               <Space direction=\"vertical\">\r\n//                 <DatePicker\r\n//                   onChange={this._dateOnChange}\r\n//                   bordered={false}\r\n//                   className=\"date\"\r\n//                   showToday={false}\r\n//                   value={this.state.birthday}\r\n//                 />\r\n//               </Space>\r\n//             </div>\r\n//           </div>\r\n\r\n\r\n//           <div className=\"item\">\r\n//             <div className=\"l\">\r\n//               <p>Login Password*</p>\r\n//               <input\r\n//                 type=\"Password\"\r\n//                 value={password}\r\n//                 onChange={(value) => {\r\n//                   let data = value.target.value\r\n//                   this.setState({\r\n//                     password: data\r\n//                   })\r\n//                 }}\r\n//               />\r\n//             </div>\r\n//             <div className=\"l\">\r\n//               <p>Verify Password*</p>\r\n//               <input\r\n//                 type=\"Password\"\r\n//                 value={password1}\r\n//                 onChange={(value) => {\r\n//                   let data = value.target.value\r\n//                   this.setState({\r\n//                     password1: data\r\n//                   })\r\n//                 }}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"item\">\r\n//             <div className=\"l\">\r\n//               <p>Areas of Expertise</p>\r\n//               <Checkbox.Group onChange={this.onChange} value={this.state.checboxtValue}>\r\n//                 <Row>\r\n//                   {options.map((item, index) => {\r\n//                     if (index === options.length - 1) {\r\n//                       return (\r\n//                         <Col span={3} style={{ marginBottom: '18px' }}>\r\n//                           <Checkbox value={item.value}>{item.label}</Checkbox>\r\n//                         </Col>\r\n//                       )\r\n\r\n//                     }\r\n//                     return (\r\n//                       <Col span={6} style={{ marginBottom: '18px' }}>\r\n//                         <Checkbox value={item.value} >{item.label}</Checkbox>\r\n//                       </Col>\r\n//                     )\r\n//                   })}\r\n//                   <Col span={6} style={{ marginBottom: '18px' }}>\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       disabled={this.state.disabled}\r\n//                       style={{ background: 'none' }}\r\n//                       value={this.state.otherText}\r\n//                       onChange={val => {\r\n//                         this.setState({ otherText: val.target.value })\r\n//                       }}\r\n//                     />\r\n//                   </Col>\r\n\r\n//                 </Row>\r\n\r\n//               </Checkbox.Group>\r\n//             </div>\r\n\r\n//           </div>\r\n//           {/* 按钮 */}\r\n//           <div className=\"btn\">\r\n//             <Button\r\n//               type=\"primary\"\r\n//               shape=\"round\"\r\n//               size='large'\r\n//               htmlType=\"submit\"\r\n//               onClick={this._next}\r\n//             >\r\n//               Next\r\n//             </Button>\r\n//           </div>\r\n\r\n//         </div>\r\n\r\n//         <Modal\r\n//           title={\r\n//             <div\r\n//               style={{\r\n//                 width: '100%',\r\n//                 cursor: 'move',\r\n//                 height: '20px',\r\n//                 fontWeight: '700'\r\n//               }}\r\n//               onMouseOver={() => {\r\n//                 if (disabled) {\r\n//                   this.setState({\r\n//                     disabled: false,\r\n//                   });\r\n//                 }\r\n//               }}\r\n//               onMouseOut={() => {\r\n//                 this.setState({\r\n//                   disabled: true,\r\n//                 });\r\n//               }}\r\n//             >\r\n//               remind\r\n//             </div>\r\n//           }\r\n//           visible={visible}\r\n//           // visible={true}\r\n//           onOk={this.handleOk}\r\n//           onCancel={this.handleCancel}\r\n//           width={330}\r\n//           modalRender={(modal) => (\r\n//             <Draggable\r\n//               disabled={disabled}\r\n//               bounds={bounds}\r\n//               onStart={(event, uiData) => this.onStart(event, uiData)}\r\n//             >\r\n//               <div ref={this.draggleRef}>{modal}</div>\r\n//             </Draggable>\r\n//           )}\r\n//           footer={[\r\n//             <button\r\n//               style={{ width: '110px', height: '40px', border: 0, backgroundColor: '#E1206D', color: '#fff', borderRadius: '60px', fontSize: '18px' }}\r\n//               onClick={() => {\r\n//                 this.setState({\r\n//                   visible: false,\r\n//                   email: ''\r\n//                 })\r\n//               }}\r\n//             >Cancel</button>,\r\n//             <button\r\n//               style={{ width: '110px', height: '40px', border: 0, backgroundColor: '#E1206D', color: '#fff', borderRadius: '60px', fontSize: '18px' }}\r\n//               onClick={() => {\r\n//                 this.setState({\r\n//                   visible: false\r\n//                 })\r\n//                 this.props.history.replace('/page11')\r\n//               }}\r\n//             >Log in</button>\r\n\r\n//           ]}\r\n//           destroyOnClose={true}\r\n//         >\r\n//           <div id='vetPrifileModal'>\r\n\r\n//             <p>The mailbox has been registered, you can log in by entering a password</p>\r\n//           </div>\r\n\r\n//         </Modal>\r\n//       </div>\r\n\r\n\r\n//     )\r\n//   }\r\n// }",["243","244"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx",["245","246","247"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.less'\r\nimport pms from './../../../assets/images/pms.png'\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\n\r\n\r\n\r\nconst IsHavePMS = ({ }) => {\r\n\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    console.log('hooks模拟componentDidMount');\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div id=\"isHavePMS\">\r\n      <MaxMin\r\n        onClick={() => { history.push('/') }}\r\n        onClick1={() => history.goBack()}\r\n      />\r\n\r\n      <div className=\"body\">\r\n        <div className=\"title\">Do you have PMS?</div>\r\n        <div className=\"text\">Practices with a PMS are strongly\r\n        </div>\r\n        <div className=\"text\">encouraged to connect it.</div>\r\n\r\n        <img src={pms} alt=\"\" style={{ width: '100px' }} />\r\n\r\n        <div className=\"buttons\">\r\n          <Button\r\n\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n          // onClick={() => { this.props.history.push('/page11') }}\r\n          >\r\n            Continue with email\r\n          </Button>\r\n\r\n          <Button\r\n\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n          // onClick={() => { this.props.history.push('/page11') }}\r\n          >\r\n            Connect PMS\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nIsHavePMS.propTypes = {\r\n\r\n}\r\nIsHavePMS.defaultProps = {\r\n\r\n}\r\nexport default IsHavePMS",["248","249"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\menuOptions\\help\\Help.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx",["250","251","252","253"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Table,\r\n  Popconfirm,\r\n  Modal,\r\n  Input,\r\n  message,\r\n  Select\r\n\r\n} from 'antd'\r\nimport moment from 'moment'\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport './unassigned.less'\r\nimport Heard from './../../../utils/heard/Heard'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\n\r\nimport del from './../../../assets/images/del.png'\r\nimport UploadImg from './../../../utils/uploadImg/UploadImg'\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\n\r\nexport default class Unassigned extends Component {\r\n\r\n  state = {\r\n    historyData: [],        //列表的数据集合\r\n    units: '℉',\r\n    searchText: '',         //搜索框输入的内容\r\n    seleceEmergencies: {},  //分配的这条记录里的所有内容，比如温度、id、时间等\r\n    visible: false,       //nodel框是否显示\r\n    disabled: true,       //model是否可拖拽\r\n    imgId: -1,            //上传后返回的图像id号\r\n\r\n    assignPatientId: '',\r\n    assignPetName: '',\r\n    assignOwnerName: '',\r\n    assignBreed: '',\r\n    assignBreedId: '',\r\n    assignPetAge: '',\r\n    assignPetWeight: '',\r\n    assignPetId: '',\r\n    assignPetImgUrl: '',\r\n    inputDisabled: false,\r\n\r\n    breedArr: [],          //猫、狗品种集合\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    this._getEmergencyHistory()\r\n    this._getBreed()\r\n  }\r\n\r\n\r\n\r\n  _getEmergencyHistory = () => {\r\n\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate (data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = []\r\n    fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, 'GET', '')  //userID要自动的\r\n      .then(res => {\r\n        if (res.flag === true) {\r\n          let datas = res.data\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo, clinicalDatagroupId,\r\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity } = datas[i]\r\n              let Tem = temperature\r\n              try {\r\n                Tem = temperature || clinicalDataEntity.data0\r\n              } catch (error) {\r\n                console.log('抛出的异常', error);\r\n              }\r\n\r\n\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format('MMM DD'),\r\n                time: moment(createTime).format('hh:mm A'),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n              }\r\n\r\n              historys.push(str)\r\n            }\r\n          }\r\n\r\n          //把所有数据拿完后做个排序\r\n\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log('historyData:', historyData);\r\n          this.setState({\r\n            historyData\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n  _getBreed = () => {\r\n    fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', { speciesId: 1 })\r\n      .then(res => {\r\n        if (res.code === 0) {\r\n          let arr = []\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n              speciesId: 1\r\n            }\r\n            arr.push(data)\r\n          })\r\n\r\n          fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', { speciesId: 2 })\r\n            .then(res => {\r\n              if (res.code === 0) {\r\n\r\n                res.petlist.map((item, index) => {\r\n                  let data = {\r\n                    petSpeciesBreedId: item.petSpeciesBreedId,\r\n                    breedName: item.breedName,\r\n                    speciesId: 2\r\n                  }\r\n                  arr.push(data)\r\n                })\r\n\r\n\r\n\r\n                console.log('----品种集合：', arr);\r\n                this.setState({\r\n                  breedArr: arr\r\n                })\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n  _search = () => {\r\n    console.log('我要去搜索了');\r\n  }\r\n\r\n  draggleRef = React.createRef();\r\n\r\n\r\n\r\n  handleOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: '',\r\n      assignPetName: '',\r\n      assignOwnerName: '',\r\n      assignBreed: '',\r\n      assignBreedId: '',\r\n      assignPetAge: '',\r\n      assignPetWeight: '',\r\n      assignPetId: '',\r\n      assignPetImgUrl: ''\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log('取消');\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: '',\r\n      assignPetName: '',\r\n      assignOwnerName: '',\r\n      assignBreed: '',\r\n      assignBreedId: '',\r\n      assignPetAge: '',\r\n      assignPetWeight: '',\r\n      assignPetId: '',\r\n      assignPetImgUrl: ''\r\n    });\r\n  };\r\n\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n  _select = (value, data) => {\r\n    console.log(value, data);  //value的值为id\r\n    this.setState({\r\n      assignBreedId: value,\r\n      assignBreed: data.children\r\n    })\r\n  }\r\n\r\n  _modal = () => {\r\n    let that = this\r\n\r\n    function getPetInfoByPatientId () {\r\n\r\n\r\n      switch (storage.identity) {\r\n        case '1':\r\n          console.log('我是vetspire查找');\r\n\r\n          break;\r\n\r\n        case '2':\r\n          console.log('我是ezyVet查找');\r\n          let params = {\r\n            animalId: that.state.assignPatientId,\r\n            organizationId: 4\r\n          }\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach(key =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          console.log('ezyVet集成查找宠物入参-请求地址', params, url);\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              'authorization': `Bearer ${storage.ezyVetToken}`,\r\n            }\r\n          }).then((response) => response.json())\r\n            .then((res) => {\r\n              console.log('res', res);\r\n              this.setState({\r\n                spin: false\r\n              })\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  })\r\n                }\r\n                console.log(petArr);\r\n\r\n                let { petId } = petArr\r\n                // assign(petId)\r\n\r\n              } else {\r\n                //没有宠物\r\n                message.error('There are no pets under this patientID')\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error('There are no pets under this patientID')\r\n            });\r\n\r\n          break;\r\n\r\n        case '3':\r\n          console.log('我是一般医生查找');\r\n          let datas = {\r\n            patientId: that.state.assignPatientId,\r\n            doctorId: storage.userId,\r\n          }\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId\r\n          }\r\n          console.log('入参：', datas);\r\n          fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n            .then(res => {\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  })\r\n                }\r\n\r\n                console.log('获取到宠物信息', petArr);\r\n\r\n                let { petId, petName, firstName, lastName, breedName, age, weight, url, birthday } = petArr[0]\r\n\r\n                let assignPetName = petName ? petName : '';\r\n                let assignOwnerName = lastName ? lastName : ''\r\n                assignOwnerName = firstName ? `${assignOwnerName} ${firstName}` : assignOwnerName;\r\n                let assignBreed = breedName ? breedName : '';\r\n                let assignPetAge = age ? age : '';\r\n                let assignPetWeight = weight ? weight : ''\r\n                let assignPetImgUrl = url ? url : ''\r\n\r\n                if (!assignPetAge) {\r\n                  let now = moment(new Date())\r\n                  let year = now.diff(moment(birthday), 'years')\r\n                  assignPetAge = year\r\n                }\r\n\r\n\r\n                that.setState({\r\n                  assignPetName,\r\n                  assignBreed,\r\n                  assignPetAge,\r\n                  assignPetWeight,\r\n                  assignPetId: petId,\r\n                  assignPetImgUrl,\r\n                  inputDisabled: true\r\n                })\r\n\r\n\r\n                // assign(petId)\r\n              } else {\r\n                that.setState({\r\n                  inputDisabled: false,\r\n                  assignPetName: '',\r\n                  assignOwnerName: '',\r\n                  assignBreed: '',\r\n                  assignBreedId: '',\r\n                  assignPetAge: '',\r\n                  assignPetWeight: '',\r\n                  assignPetId: '',\r\n                  assignPetImgUrl: ''\r\n                })\r\n                message.error('There are no pets under this patientID')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              that.setState({\r\n                inputDisabled: false,\r\n                assignPetName: '',\r\n                assignOwnerName: '',\r\n                assignBreed: '',\r\n                assignBreedId: '',\r\n                assignPetAge: '',\r\n                assignPetWeight: '',\r\n                assignPetId: '',\r\n                assignPetImgUrl: ''\r\n              })\r\n              message.error('There are no pets under this patientID')\r\n              console.log(err);\r\n            })\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    const assignPet = () => {\r\n      let parmes = {\r\n        petId: this.state.assignPetId,\r\n        clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId\r\n      }\r\n      console.log('分配的数据信息', parmes);\r\n      fetchRequest(`/pet/addAndSavePetExam/${that.state.seleceEmergencies.historyId}`, 'POST', parmes)\r\n        .then(res => {\r\n          console.log('----------', res);\r\n          if (res.flag === true) {\r\n            console.log('分配成功');\r\n            message.success('Assigned successfully')\r\n            that._getEmergencyHistory()\r\n            that.setState({\r\n              visible: false,\r\n              assignPatientId: '',\r\n              assignPetName: '',\r\n              assignOwnerName: '',\r\n              assignBreed: '',\r\n              assignBreedId: '',\r\n              assignPetAge: '',\r\n              assignPetWeight: '',\r\n              assignPetId: '',\r\n              assignPetImgUrl: ''\r\n            })\r\n          } else {\r\n            message.error('Assignment failed')\r\n          }\r\n\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          message.error('Assignment failed')\r\n        })\r\n    }\r\n\r\n\r\n\r\n    let { disabled, bounds, visible } = this.state\r\n    let options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\r\n    return (\r\n      <Modal\r\n        wrapClassName={'web'}//对话框外部的类名，主要是用来修改这个modal的样式的\r\n        destroyOnClose={true}\r\n        title={\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              cursor: 'move',\r\n              height: '30px',\r\n              textAlign: 'center',\r\n\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          >\r\n\r\n          </div>\r\n        }\r\n        visible={visible}\r\n        // visible={true}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\r\n      >\r\n        <div id=\"unassignedModal\">\r\n          <div className=\"title\">\r\n            Assign <br />\r\n            Measurement to\r\n          </div>\r\n\r\n          <div className=\"addPhoto\">\r\n            <UploadImg\r\n\r\n              getImg={(val) => {\r\n                console.log('hahahahahahah我获得了', val);\r\n                this.setState({\r\n                  imgId: val.imageId\r\n                })\r\n              }}\r\n              imgUrl={this.state.assignPetImgUrl}\r\n              disable={this.state.inputDisabled}\r\n            />\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"item\">\r\n            <p >Patient ID:</p>\r\n            <Input\r\n              value={this.state.assignPatientId}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPatientId: item.target.value\r\n                })\r\n\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  getPetInfoByPatientId()\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  console.log('清空');\r\n                  this.setState({\r\n                    assignPatientId: ''\r\n                  })\r\n                }\r\n              }}\r\n              onBlur={() => {\r\n                if (this.state.assignPatientId.length > 0) {\r\n                  getPetInfoByPatientId()\r\n                }\r\n\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <div className=\"item\">\r\n            <p >Pet Name:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetName}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetName: item.target.value\r\n                })\r\n\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <p >Owner Name:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignOwnerName}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignOwnerName: item.target.value\r\n                })\r\n\r\n              }}\r\n\r\n            />\r\n          </div>\r\n          <div className=\"item\">\r\n            <p >Breed:</p>\r\n            <div className=\"infoInput\">\r\n              {/* <Input bordered={false} /> */}\r\n              <Select\r\n                disabled={this.state.inputDisabled}\r\n                showSearch\r\n                style={{ width: '100%' }}\r\n                bordered={false}\r\n                value={this.state.assignBreed}\r\n                // size = {'small'}        \r\n                placeholder=\"Search to Select\"\r\n                optionFilterProp=\"children\"\r\n                listHeight={256}\r\n                onSelect={(value, data) => this._select(value, data)}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n              >\r\n                {options}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"item\">\r\n            <p >Pet Age:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetAge}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetAge: item.target.value\r\n                })\r\n\r\n              }}\r\n            />\r\n\r\n          </div>\r\n          <div className=\"item\">\r\n            <p >Pet Weight:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetWeight}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetWeight: item.target.value\r\n                })\r\n\r\n              }}\r\n\r\n            />\r\n\r\n            <div className=\"unit\">{`kg`}</div>\r\n          </div>\r\n\r\n          <div className=\"btnF\">\r\n            <div className=\"btn\" onClick={this.handleCancel}>Cancel</div>\r\n            <div className=\"btn\" onClick={() => {\r\n              if (this.state.assignPetId) {\r\n                assignPet()\r\n              } else {\r\n                message.error('Did not find this pet')\r\n              }\r\n\r\n            }}>Confirm</div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </Modal>\r\n\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    const _del = (key, record) => {\r\n      console.log('删除', key, record);\r\n\r\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, 'DELETE')\r\n        .then(res => {\r\n          if (res.flag === true) {\r\n            console.log('删除成功');\r\n            const historyData = [...this.state.historyData];\r\n            console.log(historyData);\r\n            this.setState({\r\n              historyData: historyData.filter((item) => item.historyId !== key)\r\n            });\r\n          } else {\r\n            console.log('删除失败');\r\n          }\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n      {\r\n        title: '',\r\n        dataIndex: 'operation',\r\n        key: 'operation',\r\n        render: (text, record, index) => {\r\n          // console.log('狩猎:', text, record, index);\r\n          //record:\r\n          return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', }} >\r\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\r\n                <img src={del} alt=\"\" style={{ marginRight: '8px' }} />\r\n              </Popconfirm>\r\n            </div>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ textAlign: 'center' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Time',\r\n        dataIndex: 'time',\r\n        key: 'time',\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ textAlign: 'center' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n      // {\r\n      //   // title: `Temp(${this.state.units})`,\r\n      //   title: `Temp(℉)`,\r\n      //   key: 'temp',\r\n      //   dataIndex: 'temp',\r\n      //   render: (text, record, index) => {\r\n      //     // console.log(text, record);\r\n      //     /**\r\n      //      * bag：温度数值前的圆圈的背景颜色\r\n      //      * tem：展示的温度\r\n      //      * endvalue:将从后台得到的数据全部转化成华氏度\r\n      //      * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n      //      * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n      //      * \r\n      //      */\r\n\r\n      //     let bag = '', tem = ''\r\n\r\n      //     let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\r\n      //     let min = 100.4, max = 102.56\r\n\r\n\r\n\r\n\r\n\r\n\r\n      //     if (endValue > max) {\r\n      //       bag = '#E1206D'\r\n      //     } else if (endValue < min) {\r\n      //       bag = '#98DA86'\r\n      //     } else {\r\n      //       bag = '#58BDE6'\r\n      //     }\r\n\r\n      //     if (this.state.units === '℃') {\r\n      //       if (text) {\r\n      //         tem = `${text}${this.state.units}`\r\n      //       }\r\n      //     } else {\r\n      //       if (text) {\r\n      //         if (text > 55) {\r\n      //           tem = `${text}${this.state.units}`\r\n      //         } else {\r\n      //           tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\r\n      //         }\r\n\r\n      //       }\r\n      //     }\r\n      //     return (\r\n      //       <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      //         {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\r\n      //         <p style={{ margin: 0, padding: 0 }}>{tem}</p>\r\n      //       </div>\r\n      //     )\r\n\r\n      //   }\r\n      // },\r\n\r\n      {\r\n\r\n        title: ' Pet Description',\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ width: '70px' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n      // Species\r\n\r\n      {\r\n        title: 'Species',\r\n        dataIndex: 'species',\r\n        key: 'species',\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ width: '70px' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n\r\n\r\n\r\n\r\n      {\r\n        title: 'Note',\r\n        dataIndex: 'note',\r\n        key: 'note',\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ width: '70px' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n\r\n\r\n      {\r\n        title: '',\r\n        dataIndex: 'assign',\r\n        key: 'assign',\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <div className=\"assign\" onClick={() => {\r\n              console.log(text, record, index);\r\n              this.setState({\r\n                visible: true,\r\n                seleceEmergencies: record\r\n              })\r\n            }}>Assign</div>\r\n\r\n          )\r\n\r\n        }\r\n      },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n      <div id=\"unassigned\">\r\n        <Heard />\r\n\r\n        <div className=\"body\">\r\n          <div className=\"title\">Unassigned Measurements </div>\r\n          <div className=\"input\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"iconfont search\"\r\n              placeholder=\"&#xe628; Search Pet Name or Description\"\r\n              value={this.state.searchText}\r\n              onChange={e => {\r\n                this.setState({\r\n                  searchText: e.target.value\r\n                })\r\n              }}\r\n              onKeyUp={(e) => {\r\n                // console.log(e);\r\n                if (e.keyCode === 13) {\r\n                  this._search()\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  this.setState({\r\n                    searchText: ''\r\n                  })\r\n\r\n                }\r\n              }}\r\n\r\n            />\r\n            <div className=\"searchBtn\"\r\n              onClick={this._search}\r\n\r\n            >Search</div>\r\n          </div>\r\n\r\n          <div className=\"table\">\r\n            <Table\r\n              columns={columns}\r\n              dataSource={this.state.historyData}\r\n              rowKey={columns => columns.historyId}\r\n              pagination={{ pageSize: 8, showSizeChanger: false, showQuickJumper: true }}\r\n            />\r\n          </div>\r\n\r\n\r\n          {this._modal()}\r\n\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\FetchUtil.js",["254","255","256","257"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\areaCode\\imgArray.js",["258"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\menuOptions\\settings\\Settings.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\heard\\Heard.js",["259","260"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx",["261","262","263"],"import React, { Component } from 'react'\r\nimport {\r\n  // Button,\r\n  message,\r\n  Modal,\r\n  Input\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport 'antd/dist/antd.css';\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\nimport { createFromIconfontCN, SyncOutlined } from '@ant-design/icons';\r\nimport Button from './../../../utils/button/Button'\r\n\r\n\r\n\r\nimport './joinOrganizationByOption.less'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nexport default class FindWorkplace extends Component {\r\n\r\n  state = {\r\n    search: '',\r\n    listData: [],\r\n    searchData: [],\r\n    selectId: {},\r\n    isOrg: false,       //nodel框是否显示\r\n    isWorkplace: false,\r\n    workplaceList: [],\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n    selectworkplace: {}\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('middle')\r\n    fetchRequest(`/organization/listAll`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            listData: res.data\r\n          })\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n    this.setState({\r\n      selectId: temporaryStorage.logupSelectOrganization\r\n    })\r\n    temporaryStorage.logupSelectOrganization = {}\r\n  }\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n  _logIn = () => {\r\n\r\n    let storage = window.localStorage;\r\n    let { email, hash } = temporaryStorage.logupVetInfo\r\n    let params = {\r\n      email: email.replace(/(^\\s*)/g, \"\"),\r\n      hash,\r\n      identityTypeId: '1'\r\n    }\r\n    fetchRequest('/user/mellaLogin', 'POST', params)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status && res.status === 404) {\r\n          message.error('system error');\r\n          return\r\n        }\r\n        if (res.code === 10001 && res.msg === '账号错误') {\r\n          message.error('Account error');\r\n          return\r\n        }\r\n        if (res.code === 10002 && res.msg === '密码错误') {\r\n          message.error('wrong password')\r\n          return;\r\n        }\r\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\r\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\r\n          return\r\n        }\r\n\r\n        if (res.code === 0 && res.msg === 'success') {\r\n          console.log('账号密码正确，登录进去了');\r\n          storage.userId = ''\r\n\r\n          storage.userId = res.success.userId\r\n          storage.roleId = res.success.roleId\r\n          if (res.success.lastWorkplaceId) {\r\n            storage.lastWorkplaceId = res.success.lastWorkplaceId\r\n          } else {\r\n            storage.lastWorkplaceId = ''\r\n          }\r\n          this.setState({\r\n            isOrg: false,\r\n            isWorkplace: false\r\n          })\r\n          this.props.history.push('/uesr/selectExam')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  _search = (val) => {\r\n    let search = val.target.value\r\n    let { listData } = this.state\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n  _searchworkPlace = (val) => {\r\n    let search = val.target.value\r\n    let listData = this.state.workplaceList\r\n    console.log('----------------', listData);\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].workplaceName.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n\r\n  _list = () => {\r\n    const { search, listData, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : listData\r\n    let option = data.map((item, index) => {\r\n      return <li key={item.organizationId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectId: item\r\n          })\r\n          console.log(item);\r\n          temporaryStorage.logupSelectOrganization = item\r\n\r\n\r\n        }}\r\n\r\n      >\r\n        <div className=\"item\"> {item.name}</div>\r\n\r\n        {(this.state.selectId.organizationId === item.organizationId ? <span className=\"search\">&#xe614;</span> : null)}\r\n      </li>\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  _list1 = () => {\r\n    const { search, workplaceList, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : workplaceList\r\n    let option = data.map((item, index) => {\r\n      return <li key={item.workplaceId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectworkplace: item\r\n          })\r\n          console.log(item);\r\n\r\n        }}\r\n\r\n      >\r\n\r\n        {item.workplaceName}\r\n        {(this.state.selectworkplace === item ? <span className=\"search\">&#xe614;</span> : null)}\r\n      </li>\r\n\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  _goNewOrg = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      isOrg: false,\r\n      isWorkplace: false\r\n    })\r\n    this.props.history.push('/uesr/logUp/NewOrganization')\r\n  }\r\n  _goNewWorkplace = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      isOrg: false,\r\n      isWorkplace: false\r\n    })\r\n    this.props.history.push('/uesr/logUp/NewWorkplace')\r\n  }\r\n  _goWorkplace = () => {\r\n    console.log('前往工作场所');\r\n    fetchRequest(`/workplace/listAllWorkplaceByOrganizationId/${temporaryStorage.logupSelectOrganization.organizationId}`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            workplaceList: res.data,\r\n            isOrg: false,\r\n\r\n          }, () => {\r\n            this.setState({\r\n              isWorkplace: true\r\n            })\r\n          })\r\n        } else {\r\n          console.log('请求错误');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  _addworkplaced = () => {\r\n    let params = {\r\n      userId: temporaryStorage.logupSuccessData.userId,\r\n      roleId: 2,\r\n      workplaceId: this.state.selectworkplace.workplaceId,\r\n      organizationId: this.state.selectworkplace.organizationId\r\n    }\r\n    console.log('入参：', params);\r\n    fetchRequest('/user/updateUserInfo', 'POST', params)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.flag === true) {\r\n          message.success('Join successfully', 3)\r\n\r\n          console.log('成功',);\r\n          this._logIn()\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        message.error(err.message, 3)\r\n      })\r\n  }\r\n\r\n  render () {\r\n    let { disabled, bounds, isOrg, isWorkplace } = this.state\r\n    return (\r\n      <div id=\"joinOrganizationByOption\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/uesr/logUp/VetPrifile')}\r\n        />\r\n\r\n        <div className=\"text\">Join an Organization</div>\r\n\r\n        <div className=\"way\">\r\n          <div className=\"item\"\r\n            onClick={() => {\r\n              // this.props.history.push('/uesr/logUp/FindMyOrganization')\r\n              this.setState({\r\n                isOrg: true\r\n              })\r\n              console.log('搜索名称加入');\r\n            }}\r\n          >\r\n            <div className=\"iconBox\">\r\n              <MyIcon type='icon-search' className=\"icon\" />\r\n            </div>\r\n            <div className=\"r\">\r\n\r\n              <div className=\"title\">Search organization</div>\r\n\r\n              <div className=\"arrow\">\r\n                <MyIcon type='icon-jiantou2' className=\"icon\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"item\" onClick={() => {\r\n            console.log('创建');\r\n            this.props.history.push('/uesr/logUp/NewOrganization')\r\n          }}>\r\n            <div className=\"iconBox\">\r\n              <MyIcon type='icon-tianjia4' className=\"icon\" />\r\n            </div>\r\n            <div className=\"r\">\r\n              <div className=\"listtext\">\r\n                <div className=\"title\">Create an organization</div>\r\n              </div>\r\n              <div className=\"arrow\">\r\n                <MyIcon type='icon-jiantou2' className=\"icon\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\" onClick={() => {\r\n            console.log('搜索id加入');\r\n            let params = {\r\n              userId: temporaryStorage.logupSuccessData.userId,\r\n              roleId: 2,\r\n            }\r\n            fetchRequest('/user/updateUserInfo', 'POST', params)\r\n              .then(res => {\r\n                console.log(res);\r\n                if (res.flag === true) {\r\n\r\n                  console.log('成功',);\r\n                  this._logIn()\r\n                }\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n                message.error(err.message, 3)\r\n              })\r\n          }}>\r\n            <div className=\"iconBox\">\r\n              <MyIcon type='icon-guanbi2' className=\"icon\" />\r\n            </div>\r\n            <div className=\"r\">\r\n              <div className=\"listtext\">\r\n                <div className=\"title\">Continue without organization</div>\r\n              </div>\r\n              <div className=\"arrow\">\r\n                <MyIcon type='icon-jiantou2' className=\"icon\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* 组织的modal框 */}\r\n        <Modal\r\n\r\n          visible={isOrg}\r\n          // visible={true}\r\n          onCancel={() => this.setState({ isOrg: false })}\r\n          width={350}\r\n          footer={[]}\r\n          modalRender={(modal) => (\r\n            <Draggable\r\n              disabled={disabled}\r\n              bounds={bounds}\r\n              onStart={(event, uiData) => this.onStart(event, uiData)}\r\n            >\r\n              <div ref={this.draggleRef}>{modal}</div>\r\n            </Draggable>\r\n          )}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"findOrg\"\r\n        >\r\n          <div id='findOrg'>\r\n            <div className=\"text\"\r\n              onMouseOver={() => {\r\n                if (disabled) {\r\n                  this.setState({\r\n                    disabled: false,\r\n                  });\r\n                }\r\n              }}\r\n              onMouseOut={() => {\r\n                this.setState({\r\n                  disabled: true,\r\n                });\r\n              }}\r\n\r\n            >Find my organization</div>\r\n\r\n            <div className=\"searchBox\">\r\n\r\n              <Input\r\n                placeholder=\" &#xe61b; Search organization\"\r\n                bordered={false}\r\n                allowClear={true}\r\n                value={this.state.search}\r\n                onChange={this._search}\r\n              />\r\n\r\n            </div>\r\n            <div className=\"list\">\r\n              {this._list()}\r\n            </div>\r\n\r\n            <div className=\"foot\">\r\n              <div className=\"btn\">\r\n                <Button\r\n                  text={'Join Organization'}\r\n                  onClick={this._goWorkplace}\r\n                />\r\n              </div>\r\n              <span>{`Don’t see your organization? `}\r\n                <a href=\"#\" onClick={this._goNewOrg}>Create a new organization</a>\r\n              </span>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </Modal>\r\n        {/* 工作场所的modal框 */}\r\n        <Modal\r\n\r\n          visible={isWorkplace}\r\n          // visible={true}\r\n          onCancel={() => this.setState({ isWorkplace: false })}\r\n          width={350}\r\n          footer={[]}\r\n          modalRender={(modal) => (\r\n            <Draggable\r\n              disabled={disabled}\r\n              bounds={bounds}\r\n              onStart={(event, uiData) => this.onStart(event, uiData)}\r\n            >\r\n              <div ref={this.draggleRef}>{modal}</div>\r\n            </Draggable>\r\n          )}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"findOrg\"\r\n        >\r\n          <div id='findOrg'>\r\n            <div className=\"text\"\r\n              onMouseOver={() => {\r\n                if (disabled) {\r\n                  this.setState({\r\n                    disabled: false,\r\n                  });\r\n                }\r\n              }}\r\n              onMouseOut={() => {\r\n                this.setState({\r\n                  disabled: true,\r\n                });\r\n              }}\r\n\r\n            >Find my workplace</div>\r\n\r\n            <div className=\"searchBox\">\r\n\r\n              <div\r\n                className=\" iconfont icon-left return\"\r\n                onClick={() => { this.setState({ isWorkplace: false, isOrg: true }) }}\r\n              />\r\n              <Input\r\n                placeholder=\" &#xe61b; Search workplace\"\r\n                bordered={false}\r\n                allowClear={true}\r\n                value={this.state.search}\r\n                onChange={this._searchworkPlace}\r\n              />\r\n\r\n            </div>\r\n            <div className=\"list\">\r\n              {this._list1()}\r\n            </div>\r\n\r\n            <div className=\"foot\">\r\n              <div className=\"btn\">\r\n                <Button\r\n                  text={'Join Workplace'}\r\n                  onClick={this._addworkplaced}\r\n                />\r\n              </div>\r\n              <span>{`Don’t see your workplace? `}\r\n                <a href=\"#\" onClick={this._goNewWorkplace}>Create a new workplace</a>\r\n              </span>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\temporaryStorage.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\uploadImg\\UploadImg.js",["264"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\home\\Home.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\App.js",["265","266"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\signIn\\forgotPassword\\ForgotPassword.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx",["267","268","269","270"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js",["271","272","273","274","275","276","277","278","279","280","281","282","283"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx",["284","285","286","287","288"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mellaEXE\\src\\utils\\areaCode\\country.js",[],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":3,"column":32,"nodeType":"295","messageId":"296","endLine":3,"endColumn":44},{"ruleId":"293","severity":1,"message":"297","line":14,"column":10,"nodeType":"295","messageId":"296","endLine":14,"endColumn":23},{"ruleId":"298","severity":1,"message":"299","line":295,"column":38,"nodeType":"300","endLine":295,"endColumn":73},{"ruleId":"293","severity":1,"message":"301","line":331,"column":19,"nodeType":"295","messageId":"296","endLine":331,"endColumn":26},{"ruleId":"293","severity":1,"message":"302","line":2,"column":17,"nodeType":"295","messageId":"296","endLine":2,"endColumn":23},{"ruleId":"293","severity":1,"message":"303","line":3,"column":8,"nodeType":"295","messageId":"296","endLine":3,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":6,"column":32,"nodeType":"295","messageId":"296","endLine":6,"endColumn":44},{"ruleId":"293","severity":1,"message":"304","line":17,"column":9,"nodeType":"295","messageId":"296","endLine":17,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":99,"column":41,"nodeType":"307","messageId":"308","endLine":99,"endColumn":43},{"ruleId":"309","severity":1,"message":"310","line":158,"column":34,"nodeType":"311","messageId":"312","endLine":158,"endColumn":48},{"ruleId":"309","severity":1,"message":"310","line":195,"column":29,"nodeType":"311","messageId":"312","endLine":195,"endColumn":42},{"ruleId":"293","severity":1,"message":"313","line":243,"column":13,"nodeType":"295","messageId":"296","endLine":243,"endColumn":16},{"ruleId":"293","severity":1,"message":"314","line":243,"column":18,"nodeType":"295","messageId":"296","endLine":243,"endColumn":20},{"ruleId":"293","severity":1,"message":"315","line":243,"column":22,"nodeType":"295","messageId":"296","endLine":243,"endColumn":30},{"ruleId":"293","severity":1,"message":"316","line":372,"column":11,"nodeType":"295","messageId":"296","endLine":372,"endColumn":24},{"ruleId":"293","severity":1,"message":"317","line":375,"column":9,"nodeType":"295","messageId":"296","endLine":375,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":591,"column":5,"nodeType":"320","messageId":"321","endLine":594,"endColumn":6},{"ruleId":"318","severity":1,"message":"319","line":596,"column":5,"nodeType":"320","messageId":"321","endLine":599,"endColumn":6},{"ruleId":"322","severity":1,"message":"323","line":613,"column":40,"nodeType":"324","messageId":"325","endLine":613,"endColumn":41,"suggestions":"326"},{"ruleId":"327","severity":1,"message":"328","line":614,"column":51,"nodeType":"311","messageId":"329","endLine":614,"endColumn":53},{"ruleId":"289","replacedBy":"330"},{"ruleId":"291","replacedBy":"331"},{"ruleId":"293","severity":1,"message":"302","line":2,"column":17,"nodeType":"295","messageId":"296","endLine":2,"endColumn":23},{"ruleId":"293","severity":1,"message":"303","line":3,"column":8,"nodeType":"295","messageId":"296","endLine":3,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":6,"column":32,"nodeType":"295","messageId":"296","endLine":6,"endColumn":44},{"ruleId":"293","severity":1,"message":"304","line":18,"column":9,"nodeType":"295","messageId":"296","endLine":18,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":78,"column":51,"nodeType":"307","messageId":"308","endLine":78,"endColumn":53},{"ruleId":"293","severity":1,"message":"316","line":258,"column":15,"nodeType":"295","messageId":"296","endLine":258,"endColumn":28},{"ruleId":"293","severity":1,"message":"317","line":261,"column":13,"nodeType":"295","messageId":"296","endLine":261,"endColumn":21},{"ruleId":"318","severity":1,"message":"319","line":516,"column":9,"nodeType":"320","messageId":"321","endLine":519,"endColumn":10},{"ruleId":"318","severity":1,"message":"319","line":521,"column":9,"nodeType":"320","messageId":"321","endLine":524,"endColumn":10},{"ruleId":"293","severity":1,"message":"332","line":673,"column":135,"nodeType":"295","messageId":"296","endLine":673,"endColumn":144},{"ruleId":"293","severity":1,"message":"333","line":2,"column":71,"nodeType":"295","messageId":"296","endLine":2,"endColumn":76},{"ruleId":"293","severity":1,"message":"334","line":10,"column":10,"nodeType":"295","messageId":"296","endLine":10,"endColumn":21},{"ruleId":"293","severity":1,"message":"335","line":125,"column":48,"nodeType":"295","messageId":"296","endLine":125,"endColumn":54},{"ruleId":"318","severity":1,"message":"319","line":553,"column":9,"nodeType":"320","messageId":"321","endLine":557,"endColumn":10},{"ruleId":"293","severity":1,"message":"336","line":561,"column":9,"nodeType":"295","messageId":"296","endLine":561,"endColumn":27},{"ruleId":"337","severity":1,"message":"338","line":606,"column":7,"nodeType":"339","messageId":"329","endLine":606,"endColumn":10},{"ruleId":"293","severity":1,"message":"340","line":1593,"column":17,"nodeType":"295","messageId":"296","endLine":1593,"endColumn":23},{"ruleId":"293","severity":1,"message":"341","line":17,"column":8,"nodeType":"295","messageId":"296","endLine":17,"endColumn":15},{"ruleId":"293","severity":1,"message":"297","line":25,"column":10,"nodeType":"295","messageId":"296","endLine":25,"endColumn":23},{"ruleId":"293","severity":1,"message":"342","line":54,"column":5,"nodeType":"295","messageId":"296","endLine":54,"endColumn":22},{"ruleId":"293","severity":1,"message":"343","line":55,"column":5,"nodeType":"295","messageId":"296","endLine":55,"endColumn":8},{"ruleId":"293","severity":1,"message":"344","line":57,"column":5,"nodeType":"295","messageId":"296","endLine":57,"endColumn":16},{"ruleId":"318","severity":1,"message":"319","line":800,"column":9,"nodeType":"320","messageId":"321","endLine":804,"endColumn":10},{"ruleId":"293","severity":1,"message":"345","line":890,"column":9,"nodeType":"295","messageId":"296","endLine":890,"endColumn":24},{"ruleId":"293","severity":1,"message":"336","line":891,"column":9,"nodeType":"295","messageId":"296","endLine":891,"endColumn":27},{"ruleId":"322","severity":1,"message":"346","line":2074,"column":63,"nodeType":"324","messageId":"325","endLine":2074,"endColumn":64,"suggestions":"347"},{"ruleId":"322","severity":1,"message":"323","line":2074,"column":169,"nodeType":"324","messageId":"325","endLine":2074,"endColumn":170,"suggestions":"348"},{"ruleId":"322","severity":1,"message":"346","line":2089,"column":63,"nodeType":"324","messageId":"325","endLine":2089,"endColumn":64,"suggestions":"349"},{"ruleId":"322","severity":1,"message":"323","line":2089,"column":169,"nodeType":"324","messageId":"325","endLine":2089,"endColumn":170,"suggestions":"350"},{"ruleId":"322","severity":1,"message":"346","line":2108,"column":63,"nodeType":"324","messageId":"325","endLine":2108,"endColumn":64,"suggestions":"351"},{"ruleId":"322","severity":1,"message":"323","line":2108,"column":169,"nodeType":"324","messageId":"325","endLine":2108,"endColumn":170,"suggestions":"352"},{"ruleId":"322","severity":1,"message":"346","line":2141,"column":63,"nodeType":"324","messageId":"325","endLine":2141,"endColumn":64,"suggestions":"353"},{"ruleId":"322","severity":1,"message":"323","line":2141,"column":169,"nodeType":"324","messageId":"325","endLine":2141,"endColumn":170,"suggestions":"354"},{"ruleId":"322","severity":1,"message":"346","line":2157,"column":63,"nodeType":"324","messageId":"325","endLine":2157,"endColumn":64,"suggestions":"355"},{"ruleId":"322","severity":1,"message":"323","line":2157,"column":169,"nodeType":"324","messageId":"325","endLine":2157,"endColumn":170,"suggestions":"356"},{"ruleId":"322","severity":1,"message":"346","line":2175,"column":63,"nodeType":"324","messageId":"325","endLine":2175,"endColumn":64,"suggestions":"357"},{"ruleId":"322","severity":1,"message":"323","line":2175,"column":169,"nodeType":"324","messageId":"325","endLine":2175,"endColumn":170,"suggestions":"358"},{"ruleId":"293","severity":1,"message":"359","line":2231,"column":11,"nodeType":"295","messageId":"296","endLine":2231,"endColumn":21},{"ruleId":"293","severity":1,"message":"360","line":2231,"column":23,"nodeType":"295","messageId":"296","endLine":2231,"endColumn":31},{"ruleId":"293","severity":1,"message":"361","line":2231,"column":33,"nodeType":"295","messageId":"296","endLine":2231,"endColumn":39},{"ruleId":"293","severity":1,"message":"362","line":2231,"column":65,"nodeType":"295","messageId":"296","endLine":2231,"endColumn":78},{"ruleId":"293","severity":1,"message":"363","line":2370,"column":30,"nodeType":"295","messageId":"296","endLine":2370,"endColumn":37},{"ruleId":"293","severity":1,"message":"364","line":2370,"column":39,"nodeType":"295","messageId":"296","endLine":2370,"endColumn":47},{"ruleId":"293","severity":1,"message":"365","line":2370,"column":49,"nodeType":"295","messageId":"296","endLine":2370,"endColumn":58},{"ruleId":"293","severity":1,"message":"332","line":2370,"column":60,"nodeType":"295","messageId":"296","endLine":2370,"endColumn":69},{"ruleId":"293","severity":1,"message":"366","line":2370,"column":71,"nodeType":"295","messageId":"296","endLine":2370,"endColumn":76},{"ruleId":"293","severity":1,"message":"317","line":2370,"column":78,"nodeType":"295","messageId":"296","endLine":2370,"endColumn":86},{"ruleId":"293","severity":1,"message":"367","line":2370,"column":88,"nodeType":"295","messageId":"296","endLine":2370,"endColumn":94},{"ruleId":"293","severity":1,"message":"368","line":2370,"column":96,"nodeType":"295","messageId":"296","endLine":2370,"endColumn":99},{"ruleId":"322","severity":1,"message":"346","line":2650,"column":59,"nodeType":"324","messageId":"325","endLine":2650,"endColumn":60,"suggestions":"369"},{"ruleId":"322","severity":1,"message":"323","line":2650,"column":165,"nodeType":"324","messageId":"325","endLine":2650,"endColumn":166,"suggestions":"370"},{"ruleId":"322","severity":1,"message":"346","line":2667,"column":59,"nodeType":"324","messageId":"325","endLine":2667,"endColumn":60,"suggestions":"371"},{"ruleId":"322","severity":1,"message":"323","line":2667,"column":165,"nodeType":"324","messageId":"325","endLine":2667,"endColumn":166,"suggestions":"372"},{"ruleId":"373","severity":1,"message":"374","line":2923,"column":17,"nodeType":"375","endLine":2923,"endColumn":37},{"ruleId":"293","severity":1,"message":"376","line":6,"column":5,"nodeType":"295","messageId":"296","endLine":6,"endColumn":10},{"ruleId":"293","severity":1,"message":"377","line":10,"column":10,"nodeType":"295","messageId":"296","endLine":10,"endColumn":28},{"ruleId":"293","severity":1,"message":"378","line":10,"column":30,"nodeType":"295","messageId":"296","endLine":10,"endColumn":42},{"ruleId":"293","severity":1,"message":"379","line":18,"column":7,"nodeType":"295","messageId":"296","endLine":18,"endColumn":13},{"ruleId":"293","severity":1,"message":"380","line":6,"column":5,"nodeType":"295","messageId":"296","endLine":6,"endColumn":10},{"ruleId":"327","severity":1,"message":"381","line":18,"column":16,"nodeType":"311","messageId":"329","endLine":18,"endColumn":18},{"ruleId":"327","severity":1,"message":"381","line":61,"column":16,"nodeType":"311","messageId":"329","endLine":61,"endColumn":18},{"ruleId":"327","severity":1,"message":"381","line":95,"column":16,"nodeType":"311","messageId":"329","endLine":95,"endColumn":18},{"ruleId":"293","severity":1,"message":"380","line":4,"column":5,"nodeType":"295","messageId":"296","endLine":4,"endColumn":10},{"ruleId":"293","severity":1,"message":"382","line":10,"column":13,"nodeType":"295","messageId":"296","endLine":10,"endColumn":19},{"ruleId":"327","severity":1,"message":"381","line":13,"column":20,"nodeType":"311","messageId":"329","endLine":13,"endColumn":22},{"ruleId":"327","severity":1,"message":"381","line":57,"column":20,"nodeType":"311","messageId":"329","endLine":57,"endColumn":22},{"ruleId":"293","severity":1,"message":"380","line":4,"column":5,"nodeType":"295","messageId":"296","endLine":4,"endColumn":10},{"ruleId":"293","severity":1,"message":"382","line":10,"column":9,"nodeType":"295","messageId":"296","endLine":10,"endColumn":15},{"ruleId":"327","severity":1,"message":"381","line":13,"column":16,"nodeType":"311","messageId":"329","endLine":13,"endColumn":18},{"ruleId":"327","severity":1,"message":"381","line":57,"column":16,"nodeType":"311","messageId":"329","endLine":57,"endColumn":18},{"ruleId":"293","severity":1,"message":"303","line":8,"column":8,"nodeType":"295","messageId":"296","endLine":8,"endColumn":17},{"ruleId":"293","severity":1,"message":"383","line":9,"column":10,"nodeType":"295","messageId":"296","endLine":9,"endColumn":30},{"ruleId":"293","severity":1,"message":"384","line":195,"column":21,"nodeType":"295","messageId":"296","endLine":195,"endColumn":29},{"ruleId":"293","severity":1,"message":"385","line":195,"column":31,"nodeType":"295","messageId":"296","endLine":195,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":340,"column":61,"nodeType":"300","endLine":340,"endColumn":96},{"ruleId":"289","replacedBy":"386"},{"ruleId":"291","replacedBy":"387"},{"ruleId":"293","severity":1,"message":"388","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":25},{"ruleId":"293","severity":1,"message":"389","line":8,"column":8,"nodeType":"295","messageId":"296","endLine":8,"endColumn":17},{"ruleId":"390","severity":1,"message":"391","line":16,"column":20,"nodeType":"392","messageId":"329","endLine":16,"endColumn":23},{"ruleId":"289","replacedBy":"393"},{"ruleId":"291","replacedBy":"394"},{"ruleId":"305","severity":1,"message":"306","line":128,"column":41,"nodeType":"307","messageId":"308","endLine":128,"endColumn":43},{"ruleId":"305","severity":1,"message":"306","line":141,"column":47,"nodeType":"307","messageId":"308","endLine":141,"endColumn":49},{"ruleId":"293","severity":1,"message":"395","line":281,"column":23,"nodeType":"295","messageId":"296","endLine":281,"endColumn":28},{"ruleId":"293","severity":1,"message":"396","line":323,"column":83,"nodeType":"295","messageId":"296","endLine":323,"endColumn":98},{"ruleId":"293","severity":1,"message":"380","line":6,"column":5,"nodeType":"295","messageId":"296","endLine":6,"endColumn":10},{"ruleId":"293","severity":1,"message":"382","line":12,"column":13,"nodeType":"295","messageId":"296","endLine":12,"endColumn":19},{"ruleId":"327","severity":1,"message":"381","line":15,"column":20,"nodeType":"311","messageId":"329","endLine":15,"endColumn":22},{"ruleId":"327","severity":1,"message":"381","line":59,"column":20,"nodeType":"311","messageId":"329","endLine":59,"endColumn":22},{"ruleId":"397","severity":1,"message":"398","line":1,"column":1,"nodeType":"399","endLine":256,"endColumn":3},{"ruleId":"293","severity":1,"message":"294","line":8,"column":10,"nodeType":"295","messageId":"296","endLine":8,"endColumn":22},{"ruleId":"293","severity":1,"message":"400","line":9,"column":10,"nodeType":"295","messageId":"296","endLine":9,"endColumn":24},{"ruleId":"293","severity":1,"message":"294","line":11,"column":32,"nodeType":"295","messageId":"296","endLine":11,"endColumn":44},{"ruleId":"298","severity":1,"message":"299","line":418,"column":17,"nodeType":"300","endLine":418,"endColumn":54},{"ruleId":"298","severity":1,"message":"299","line":489,"column":17,"nodeType":"300","endLine":489,"endColumn":60},{"ruleId":"293","severity":1,"message":"388","line":2,"column":17,"nodeType":"295","messageId":"296","endLine":2,"endColumn":25},{"ruleId":"293","severity":1,"message":"401","line":2,"column":10,"nodeType":"295","messageId":"296","endLine":2,"endColumn":23},{"ruleId":"293","severity":1,"message":"402","line":13,"column":8,"nodeType":"295","messageId":"296","endLine":13,"endColumn":17},{"ruleId":"293","severity":1,"message":"333","line":3,"column":3,"nodeType":"295","messageId":"296","endLine":3,"endColumn":8},{"ruleId":"293","severity":1,"message":"403","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":10},{"ruleId":"293","severity":1,"message":"404","line":10,"column":8,"nodeType":"295","messageId":"296","endLine":10,"endColumn":17},{"ruleId":"293","severity":1,"message":"405","line":12,"column":10,"nodeType":"295","messageId":"296","endLine":12,"endColumn":22},{"ruleId":"293","severity":1,"message":"406","line":98,"column":9,"nodeType":"295","messageId":"296","endLine":98,"endColumn":15},{"ruleId":"293","severity":1,"message":"407","line":176,"column":25,"nodeType":"295","messageId":"296","endLine":176,"endColumn":32},{"ruleId":"293","severity":1,"message":"408","line":176,"column":34,"nodeType":"295","messageId":"296","endLine":176,"endColumn":49},{"ruleId":"293","severity":1,"message":"409","line":176,"column":51,"nodeType":"295","messageId":"296","endLine":176,"endColumn":55},{"ruleId":"293","severity":1,"message":"410","line":177,"column":25,"nodeType":"295","messageId":"296","endLine":177,"endColumn":44},{"ruleId":"293","severity":1,"message":"411","line":177,"column":46,"nodeType":"295","messageId":"296","endLine":177,"endColumn":62},{"ruleId":"293","severity":1,"message":"412","line":177,"column":64,"nodeType":"295","messageId":"296","endLine":177,"endColumn":84},{"ruleId":"293","severity":1,"message":"413","line":177,"column":86,"nodeType":"295","messageId":"296","endLine":177,"endColumn":96},{"ruleId":"414","severity":1,"message":"415","line":266,"column":33,"nodeType":"295","messageId":"416","endLine":266,"endColumn":37},{"ruleId":"293","severity":1,"message":"417","line":499,"column":15,"nodeType":"295","messageId":"296","endLine":499,"endColumn":21},{"ruleId":"293","severity":1,"message":"313","line":511,"column":28,"nodeType":"295","messageId":"296","endLine":511,"endColumn":31},{"ruleId":"293","severity":1,"message":"314","line":511,"column":33,"nodeType":"295","messageId":"296","endLine":511,"endColumn":35},{"ruleId":"293","severity":1,"message":"315","line":511,"column":37,"nodeType":"295","messageId":"296","endLine":511,"endColumn":45},{"ruleId":"293","severity":1,"message":"333","line":4,"column":3,"nodeType":"295","messageId":"296","endLine":4,"endColumn":8},{"ruleId":"293","severity":1,"message":"418","line":5,"column":3,"nodeType":"295","messageId":"296","endLine":5,"endColumn":7},{"ruleId":"293","severity":1,"message":"419","line":7,"column":3,"nodeType":"295","messageId":"296","endLine":7,"endColumn":8},{"ruleId":"293","severity":1,"message":"383","line":13,"column":10,"nodeType":"295","messageId":"296","endLine":13,"endColumn":30},{"ruleId":"293","severity":1,"message":"420","line":19,"column":10,"nodeType":"295","messageId":"296","endLine":19,"endColumn":23},"no-native-reassign",["421"],"no-negated-in-lhs",["422"],"no-unused-vars","'SyncOutlined' is defined but never used.","Identifier","unusedVar","'fetchRequest1' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'baseUrl' is assigned a value but never used.","'Button' is defined but never used.","'Draggable' is defined but never used.","'SubMenu' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'birthday' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["423","424"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected",["421"],["422"],"'breedName' is assigned a value but never used.","'Input' is defined but never used.","'FetchEszVet' is defined but never used.","'gender' is assigned a value but never used.","'lastConnectionTime' is assigned a value but never used.","no-dupe-keys","Duplicate key '194'.","ObjectExpression","'temp15' is assigned a value but never used.","'echarts' is defined but never used.","'disconnectedTimer' is assigned a value but never used.","'num' is assigned a value but never used.","'messageFlog' is assigned a value but never used.","'disconnectedNum' is assigned a value but never used.","Unnecessary escape character: \\..",["425","426"],["427","428"],["429","430"],["431","432"],["433","434"],["435","436"],["437","438"],["439","440"],["441","442"],["443","444"],["445","446"],["447","448"],"'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'measuerStatus' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'isMix' is assigned a value but never used.","'weight' is assigned a value but never used.","'url' is assigned a value but never used.",["449","450"],["451","452"],["453","454"],["455","456"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Alert' is defined but never used.","'InfoCircleOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'MyIcon' is assigned a value but never used.","'token' is assigned a value but never used.","Expected '===' and instead saw '=='.","'header' is assigned a value but never used.","'createFromIconfontCN' is defined but never used.","'disabled' is assigned a value but never used.","'bounds' is assigned a value but never used.",["421"],["422"],"'useState' is defined but never used.","'PropTypes' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern",["421"],["422"],"'petId' is assigned a value but never used.","'assignOwnerName' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'SearchOutlined' is defined but never used.","'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.","'message' is defined but never used.","'mellaLogo' is defined but never used.","'fetchRequest' is defined but never used.","'params' is assigned a value but never used.","'bree_id' is assigned a value but never used.","'animalcolour_id' is assigned a value but never used.","'guid' is assigned a value but never used.","'referring_clinic_id' is assigned a value but never used.","'referring_vet_id' is assigned a value but never used.","'residence_contact_id' is assigned a value but never used.","'species_id' is assigned a value but never used.","no-const-assign","'name' is constant.","const","'chazhi' is assigned a value but never used.","'Form' is defined but never used.","'Space' is defined but never used.","'fetchRequest2' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"457","fix":"458","desc":"459"},{"messageId":"460","fix":"461","desc":"462"},{"messageId":"457","fix":"463","desc":"459"},{"messageId":"460","fix":"464","desc":"462"},{"messageId":"457","fix":"465","desc":"459"},{"messageId":"460","fix":"466","desc":"462"},{"messageId":"457","fix":"467","desc":"459"},{"messageId":"460","fix":"468","desc":"462"},{"messageId":"457","fix":"469","desc":"459"},{"messageId":"460","fix":"470","desc":"462"},{"messageId":"457","fix":"471","desc":"459"},{"messageId":"460","fix":"472","desc":"462"},{"messageId":"457","fix":"473","desc":"459"},{"messageId":"460","fix":"474","desc":"462"},{"messageId":"457","fix":"475","desc":"459"},{"messageId":"460","fix":"476","desc":"462"},{"messageId":"457","fix":"477","desc":"459"},{"messageId":"460","fix":"478","desc":"462"},{"messageId":"457","fix":"479","desc":"459"},{"messageId":"460","fix":"480","desc":"462"},{"messageId":"457","fix":"481","desc":"459"},{"messageId":"460","fix":"482","desc":"462"},{"messageId":"457","fix":"483","desc":"459"},{"messageId":"460","fix":"484","desc":"462"},{"messageId":"457","fix":"485","desc":"459"},{"messageId":"460","fix":"486","desc":"462"},{"messageId":"457","fix":"487","desc":"459"},{"messageId":"460","fix":"488","desc":"462"},{"messageId":"457","fix":"489","desc":"459"},{"messageId":"460","fix":"490","desc":"462"},{"messageId":"457","fix":"491","desc":"459"},{"messageId":"460","fix":"492","desc":"462"},{"messageId":"457","fix":"493","desc":"459"},{"messageId":"460","fix":"494","desc":"462"},"removeEscape",{"range":"495","text":"496"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"497","text":"498"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"499","text":"496"},{"range":"500","text":"498"},{"range":"501","text":"496"},{"range":"502","text":"498"},{"range":"503","text":"496"},{"range":"504","text":"498"},{"range":"505","text":"496"},{"range":"506","text":"498"},{"range":"507","text":"496"},{"range":"508","text":"498"},{"range":"509","text":"496"},{"range":"510","text":"498"},{"range":"511","text":"496"},{"range":"512","text":"498"},{"range":"513","text":"496"},{"range":"514","text":"498"},{"range":"515","text":"496"},{"range":"516","text":"498"},{"range":"517","text":"496"},{"range":"518","text":"498"},{"range":"519","text":"496"},{"range":"520","text":"498"},{"range":"521","text":"496"},{"range":"522","text":"498"},{"range":"523","text":"496"},{"range":"524","text":"498"},{"range":"525","text":"496"},{"range":"526","text":"498"},{"range":"527","text":"496"},{"range":"528","text":"498"},{"range":"529","text":"496"},{"range":"530","text":"498"},[19718,19719],"",[19718,19718],"\\",[61528,61529],[61528,61528],[61634,61635],[61634,61634],[62527,62528],[62527,62527],[62633,62634],[62633,62633],[63557,63558],[63557,63557],[63663,63664],[63663,63663],[65091,65092],[65091,65091],[65197,65198],[65197,65197],[66057,66058],[66057,66057],[66163,66164],[66163,66163],[67121,67122],[67121,67121],[67227,67228],[67227,67227],[80892,80893],[80892,80892],[80998,80999],[80998,80998],[81585,81586],[81585,81585],[81691,81692],[81691,81691]]